name: Publish cli

on:
  release:
    types:
      - published

permissions:
  contents: write
  packages: write  # Allow pushing to GHCR
  id-token: write  # This is required for actions interacting with GitHub Packages

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build Single-File Executable
      run: dotnet publish src/FuseDrill.Cli/FuseDrill.Cli.csproj -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -o ./publish

    - name: Verify Build Output
      run: ls -la ./publish

    - name: Rename Executable
      run: mv ./publish/FuseDrill.Cli ./FuseDrill

    - name: Upload Executable to GitHub Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./FuseDrill
        asset_name: FuseDrill
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker Image (scratch)
      run: |
        echo "FROM scratch" > Dockerfile
        echo "COPY FuseDrill /FuseDrill" >> Dockerfile
        echo "ENTRYPOINT [\"/FuseDrill\"]" >> Dockerfile
        echo "CMD []" >> Dockerfile
        docker build -t ghcr.io/${{ github.repository_owner }}/fusedrill:latest .

    - name: Log in to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push Docker Image to GHCR
      run: docker push ghcr.io/${{ github.repository_owner }}/fusedrill:latest
