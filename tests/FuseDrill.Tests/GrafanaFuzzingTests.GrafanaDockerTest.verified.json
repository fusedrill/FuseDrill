{
  "Seed": 1234567,
  "TestSuites": [
    {
      "ApiCalls": [
        {
          "MethodName": "AddAPIkey_http_post_Async",
          "RequestParameters": [],
          "Response": {
            "StatusCode": 410,
            "Message": "GoneError is returned when the requested endpoint was removed.  Status: 410 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddDataSource_http_post_Async",
          "ApiCallOrderId": 1,
          "RequestParameters": [
            {
              "Value": {
                "Access": "RandomString779",
                "BasicAuth": false,
                "BasicAuthUser": "RandomString275",
                "Database": "RandomString157",
                "IsDefault": false,
                "JsonData": {},
                "Name": "RandomString952",
                "SecureJsonData": {
                  "RandomString490": "RandomString757",
                  "RandomString533": "RandomString210",
                  "RandomString919": "RandomString450"
                },
                "Type": "RandomString25",
                "Uid": "{Scrubbed}",
                "Url": "{Scrubbed}",
                "User": "RandomString919",
                "WithCredentials": true
              },
              "Type": "AddDataSourceCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "Datasource": {
              "Access": "RandomString779",
              "BasicAuth": false,
              "BasicAuthUser": "RandomString275",
              "Database": "RandomString157",
              "Id": 1,
              "IsDefault": true,
              "JsonData": {},
              "Name": "RandomString952",
              "OrgId": 1,
              "ReadOnly": false,
              "SecureJsonFields": {
                "RandomString490": true,
                "RandomString533": true,
                "RandomString919": true
              },
              "Type": "RandomString25",
              "TypeLogoUrl": "public/img/icn-datasource.svg",
              "Uid": "{Scrubbed}",
              "Url": "{Scrubbed}",
              "User": "RandomString919",
              "Version": 1,
              "WithCredentials": true
            },
            "Id": 1,
            "Message": "Datasource added",
            "Name": "RandomString952"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddOrgInvite_http_post_Async",
          "ApiCallOrderId": 2,
          "RequestParameters": [
            {
              "Value": {
                "LoginOrEmail": "RandomString704",
                "Name": "RandomString882",
                "Role": "Editor",
                "SendEmail": true
              },
              "Type": "AddInviteForm",
              "Name": "body"
            }
          ],
          "Response": {
            "Message": "Created invite for RandomString704"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddOrgUser_http_post_Async",
          "ApiCallOrderId": 3,
          "RequestParameters": [
            {
              "Value": 6326,
              "Type": "long",
              "Name": "org_id"
            },
            {
              "Value": {
                "LoginOrEmail": "RandomString228",
                "Role": "Admin"
              },
              "Type": "AddOrgUserCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"User not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddOrgUserToCurrentOrg_http_post_Async",
          "ApiCallOrderId": 4,
          "RequestParameters": [
            {
              "Value": {
                "LoginOrEmail": "RandomString455",
                "Role": "Admin"
              },
              "Type": "AddOrgUserCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"User not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddTeamGroupApi_http_post_Async",
          "ApiCallOrderId": 5,
          "RequestParameters": [
            {
              "Value": 5784,
              "Type": "long",
              "Name": "teamId"
            },
            {
              "Value": {
                "GroupId": "RandomString49"
              },
              "Type": "TeamGroupMapping",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddTeamMember_http_post_Async",
          "ApiCallOrderId": 6,
          "RequestParameters": [
            {
              "Value": "RandomString448",
              "Type": "string",
              "Name": "team_id"
            },
            {
              "Value": {
                "UserId": 4893
              },
              "Type": "AddTeamMemberCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddTeamRole_http_post_Async",
          "ApiCallOrderId": 7,
          "RequestParameters": [
            {
              "Value": 758,
              "Type": "long",
              "Name": "teamId"
            },
            {
              "Value": {
                "RoleUid": "RandomString799"
              },
              "Type": "AddTeamRoleCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AddUserRole_http_post_Async",
          "ApiCallOrderId": 8,
          "RequestParameters": [
            {
              "Value": 9444,
              "Type": "long",
              "Name": "userId"
            },
            {
              "Value": {
                "Global": true,
                "RoleUid": "RandomString622"
              },
              "Type": "AddUserRoleCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminCreateUser_http_post_Async",
          "ApiCallOrderId": 9,
          "RequestParameters": [
            {
              "Value": {
                "Email": "RandomString626",
                "Login": "RandomString482",
                "Name": "RandomString11",
                "OrgId": 9099,
                "Password": "RandomString566"
              },
              "Type": "AdminCreateUserForm",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminDeleteUser_http_delete_Async",
          "ApiCallOrderId": 10,
          "RequestParameters": [
            {
              "Value": 1283,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "AdminDisableUser_http_post_Async",
          "ApiCallOrderId": 11,
          "RequestParameters": [
            {
              "Value": 7893,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminEnableUser_http_post_Async",
          "ApiCallOrderId": 12,
          "RequestParameters": [
            {
              "Value": 6651,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminGetSettings_http_get_Async",
          "ApiCallOrderId": 13,
          "RequestParameters": [],
          "Response": {},
          "HttpMethod": "get"
        },
        {
          "MethodName": "AdminGetStats_http_get_Async",
          "ApiCallOrderId": 14,
          "RequestParameters": [],
          "Response": {
            "ActiveAdmins": 1,
            "ActiveUsers": 1,
            "Admins": 1,
            "DailyActiveUsers": 1,
            "Datasources": 1,
            "MonthlyActiveUsers": 1,
            "Orgs": 1,
            "Users": 1
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "AdminGetUserAuthTokens_http_get_Async",
          "ApiCallOrderId": 15,
          "RequestParameters": [
            {
              "Value": 8864,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"User not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "AdminLogoutUser_http_post_Async",
          "ApiCallOrderId": 16,
          "RequestParameters": [
            {
              "Value": 5441,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminProvisioningReloadAccessControl_http_post_Async",
          "ApiCallOrderId": 17,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminProvisioningReloadDashboards_http_post_Async",
          "ApiCallOrderId": 18,
          "RequestParameters": [],
          "Response": {
            "Message": "Dashboards config reloaded"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminProvisioningReloadDatasources_http_post_Async",
          "ApiCallOrderId": 19,
          "RequestParameters": [],
          "Response": {
            "Message": "Datasources config reloaded"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminProvisioningReloadPlugins_http_post_Async",
          "ApiCallOrderId": 20,
          "RequestParameters": [],
          "Response": {
            "Message": "Plugins config reloaded"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminRevokeUserAuthToken_http_post_Async",
          "ApiCallOrderId": 21,
          "RequestParameters": [
            {
              "Value": 4350,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "AuthTokenId": 6620
              },
              "Type": "RevokeAuthTokenCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "AdminUpdateUserPassword_http_put_Async",
          "ApiCallOrderId": 22,
          "RequestParameters": [
            {
              "Value": 6229,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "Password": "RandomString317"
              },
              "Type": "AdminUpdateUserPasswordForm",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "AdminUpdateUserPermissions_http_put_Async",
          "ApiCallOrderId": 23,
          "RequestParameters": [
            {
              "Value": 3611,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "IsGrafanaAdmin": true
              },
              "Type": "AdminUpdateUserPermissionsForm",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "CalculateDashboardDiff_http_post_Async",
          "ApiCallOrderId": 24,
          "RequestParameters": [
            {
              "Value": {
                "Base": {
                  "DashboardId": 7437,
                  "UnsavedDashboard": {},
                  "Version": 5184
                },
                "DiffType": "json",
                "New": {
                  "DashboardId": 5313,
                  "UnsavedDashboard": {},
                  "Version": 7720
                }
              },
              "Type": "Body",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"guardian.dashboardNotFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CallDatasourceResourceByID_http_get_Async",
          "ApiCallOrderId": 25,
          "RequestParameters": [
            {
              "Value": "RandomString662",
              "Type": "string",
              "Name": "datasource_proxy_route"
            },
            {
              "Value": "RandomString647",
              "Type": "string",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "CallDatasourceResourceWithUID_http_get_Async",
          "ApiCallOrderId": 26,
          "RequestParameters": [
            {
              "Value": "RandomString205",
              "Type": "string",
              "Name": "datasource_proxy_route"
            },
            {
              "Value": "RandomString137",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "CancelSnapshot_http_post_Async",
          "ApiCallOrderId": 27,
          "RequestParameters": [
            {
              "Value": "RandomString413",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": "RandomString738",
              "Type": "string",
              "Name": "snapshotUid"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CheckDatasourceHealthByID_http_get_Async",
          "ApiCallOrderId": 29,
          "RequestParameters": [
            {
              "Value": "RandomString978",
              "Type": "string",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "CheckDatasourceHealthWithUID_http_get_Async",
          "ApiCallOrderId": 30,
          "RequestParameters": [
            {
              "Value": "RandomString686",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "CleanDataSourceCache_http_post_Async",
          "ApiCallOrderId": 31,
          "RequestParameters": [
            {
              "Value": "RandomString775",
              "Type": "string",
              "Name": "dataSourceUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "ClearHelpFlags_http_get_Async",
          "ApiCallOrderId": 32,
          "RequestParameters": [],
          "Response": {
            "Message": "Help flag set"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "CreateCloudMigrationToken_http_post_Async",
          "ApiCallOrderId": 33,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateCorrelation_http_post_Async",
          "ApiCallOrderId": 34,
          "RequestParameters": [
            {
              "Value": "RandomString837",
              "Type": "string",
              "Name": "sourceUID"
            },
            {
              "Value": {
                "Config": {
                  "Field": "RandomString177",
                  "Target": {
                    "RandomString354": {},
                    "RandomString842": {},
                    "RandomString997": {}
                  },
                  "Transformations": [
                    {
                      "Expression": "RandomString635",
                      "Field": "RandomString254",
                      "MapValue": "RandomString116",
                      "Type": "logfmt"
                    },
                    {
                      "Expression": "RandomString179",
                      "Field": "RandomString864",
                      "MapValue": "RandomString101",
                      "Type": "logfmt"
                    },
                    {
                      "Expression": "RandomString781",
                      "Field": "RandomString229",
                      "MapValue": "RandomString300"
                    }
                  ],
                  "Type": "RandomString101"
                },
                "Description": "RandomString251",
                "Label": "RandomString946",
                "Provisioned": false,
                "TargetUID": "RandomString223",
                "Type": "RandomString185"
              },
              "Type": "CreateCorrelationCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateDashboardSnapshot_http_post_Async",
          "ApiCallOrderId": 35,
          "RequestParameters": [
            {
              "Value": {
                "ApiVersion": "RandomString558",
                "Dashboard": {
                  "Object": {
                    "RandomString451": {},
                    "RandomString706": {},
                    "RandomString852": {}
                  }
                },
                "DeleteKey": "RandomString42",
                "Expires": 1851,
                "External": false,
                "Key": "RandomString548",
                "Kind": "RandomString265",
                "Name": "RandomString784"
              },
              "Type": "CreateDashboardSnapshotCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateFolder_http_post_Async",
          "ApiCallOrderId": 36,
          "RequestParameters": [
            {
              "Value": {
                "Description": "RandomString69",
                "ParentUid": "RandomString151",
                "Title": "RandomString482",
                "Uid": "{Scrubbed}"
              },
              "Type": "CreateFolderCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"folder not found\",\"status\":\"not-found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateGroupMappings_http_post_Async",
          "ApiCallOrderId": 37,
          "RequestParameters": [
            {
              "Value": "RandomString812",
              "Type": "string",
              "Name": "group_id"
            },
            {
              "Value": {
                "Roles": [
                  "RandomString446",
                  "RandomString895",
                  "RandomString837"
                ]
              },
              "Type": "GroupAttributes",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateLibraryElement_http_post_Async",
          "ApiCallOrderId": 38,
          "RequestParameters": [
            {
              "Value": {
                "FolderId": 8969,
                "FolderUid": "RandomString351",
                "Kind": "_1",
                "Model": {},
                "Name": "RandomString184",
                "Uid": "{Scrubbed}"
              },
              "Type": "CreateLibraryElementCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateOrg_http_post_Async",
          "ApiCallOrderId": 39,
          "RequestParameters": [
            {
              "Value": {
                "Name": "RandomString445"
              },
              "Type": "CreateOrgCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "Message": "Organization created",
            "OrgId": 2
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreatePlaylist_http_post_Async",
          "ApiCallOrderId": 40,
          "RequestParameters": [
            {
              "Value": {
                "Interval": "RandomString103",
                "Items": [
                  {
                    "Id": 7204,
                    "PlaylistId": 3015,
                    "Order": 9045,
                    "Title": "RandomString589",
                    "Type": "RandomString997",
                    "Value": "RandomString160"
                  },
                  {
                    "Id": 3914,
                    "PlaylistId": 1577,
                    "Order": 8554,
                    "Title": "RandomString11",
                    "Type": "RandomString173",
                    "Value": "RandomString808"
                  },
                  {
                    "Id": 1256,
                    "PlaylistId": 3519,
                    "Order": 5866,
                    "Title": "RandomString25",
                    "Type": "RandomString289",
                    "Value": "RandomString870"
                  }
                ],
                "Name": "RandomString863"
              },
              "Type": "CreatePlaylistCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"bad request data\",}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreatePublicDashboard_http_post_Async",
          "ApiCallOrderId": 41,
          "RequestParameters": [
            {
              "Value": "RandomString289",
              "Type": "string",
              "Name": "dashboardUid"
            },
            {
              "Value": {
                "AccessToken": "RandomString240",
                "AnnotationsEnabled": false,
                "IsEnabled": true,
                "Share": "RandomString100",
                "TimeSelectionEnabled": false,
                "Uid": "{Scrubbed}"
              },
              "Type": "PublicDashboardDTO",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestPublicError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateQuery_http_post_Async",
          "ApiCallOrderId": 42,
          "RequestParameters": [
            {
              "Value": {
                "DatasourceUid": "RandomString292",
                "Queries": {}
              },
              "Type": "CreateQueryInQueryHistoryCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "Result": {
              "Comment": "",
              "CreatedAt": "{Scrubbed}",
              "CreatedBy": 1,
              "DatasourceUid": "RandomString292",
              "Queries": {},
              "Starred": false,
              "Uid": "{Scrubbed}"
            }
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateRecordingRule_http_post_Async",
          "ApiCallOrderId": 43,
          "RequestParameters": [
            {
              "Value": {
                "Active": true,
                "Count": true,
                "Description": "RandomString883",
                "Destdatasourceuid": "RandomString445",
                "Id": "RandomString56",
                "Interval": 3850,
                "Name": "RandomString827",
                "Promname": "RandomString83",
                "Queries": [
                  {
                    "RandomString25": {},
                    "RandomString438": {},
                    "RandomString83": {}
                  },
                  {
                    "RandomString268": {},
                    "RandomString354": {},
                    "RandomString811": {}
                  },
                  {
                    "RandomString515": {},
                    "RandomString666": {},
                    "RandomString925": {}
                  }
                ],
                "Range": 9311,
                "Targetrefid": "RandomString412"
              },
              "Type": "RecordingRuleJSON",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateRecordingRuleWriteTarget_http_post_Async",
          "ApiCallOrderId": 44,
          "RequestParameters": [
            {
              "Value": {
                "Datasourceuid": "RandomString940",
                "Id": "RandomString976",
                "Remotewritepath": "RandomString32"
              },
              "Type": "PrometheusRemoteWriteTargetJSON",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateReport_http_post_Async",
          "ApiCallOrderId": 45,
          "RequestParameters": [
            {
              "Value": {
                "Dashboards": [
                  {
                    "Dashboard": {
                      "Id": 8853,
                      "Name": "RandomString877",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString426",
                      "To": "RandomString172"
                    }
                  },
                  {
                    "Dashboard": {
                      "Id": 8631,
                      "Name": "RandomString531",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString850",
                      "To": "RandomString788"
                    }
                  },
                  {
                    "Dashboard": {
                      "Id": 7113,
                      "Name": "RandomString754",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString698",
                      "To": "RandomString350"
                    }
                  }
                ],
                "EnableCsv": false,
                "EnableDashboardUrl": false,
                "Formats": [
                  "RandomString793",
                  "RandomString908",
                  "RandomString907"
                ],
                "Message": "RandomString176",
                "Name": "RandomString822",
                "Options": {
                  "Layout": "RandomString886",
                  "Orientation": "RandomString107",
                  "PdfCombineOneFile": true,
                  "PdfShowTemplateVariables": true,
                  "TimeRange": {
                    "From": "RandomString101",
                    "To": "RandomString271"
                  }
                },
                "Recipients": "RandomString390",
                "ReplyTo": "RandomString621",
                "ScaleFactor": 3400,
                "Schedule": {
                  "DayOfMonth": "RandomString891",
                  "EndDate": "{Scrubbed}",
                  "Frequency": "RandomString862",
                  "IntervalAmount": 9762,
                  "IntervalFrequency": "RandomString824",
                  "StartDate": "{Scrubbed}",
                  "TimeZone": "RandomString543",
                  "WorkdaysOnly": true
                },
                "State": "RandomString430"
              },
              "Type": "CreateOrUpdateReport",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateRole_http_post_Async",
          "ApiCallOrderId": 46,
          "RequestParameters": [
            {
              "Value": {
                "Description": "RandomString226",
                "DisplayName": "RandomString191",
                "Global": true,
                "Group": "RandomString958",
                "Hidden": false,
                "Name": "RandomString263",
                "Permissions": [
                  {
                    "Action": "RandomString136",
                    "Created": "{Scrubbed}",
                    "Scope": "RandomString704",
                    "Updated": "{Scrubbed}"
                  },
                  {
                    "Action": "RandomString835",
                    "Created": "{Scrubbed}",
                    "Scope": "RandomString512",
                    "Updated": "{Scrubbed}"
                  },
                  {
                    "Action": "RandomString207",
                    "Created": "{Scrubbed}",
                    "Scope": "RandomString967",
                    "Updated": "{Scrubbed}"
                  }
                ],
                "Uid": "{Scrubbed}",
                "Version": 8435
              },
              "Type": "CreateRoleForm",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateServiceAccount_http_post_Async",
          "ApiCallOrderId": 47,
          "RequestParameters": [
            {
              "Value": {
                "IsDisabled": false,
                "Name": "RandomString601",
                "Role": "Editor"
              },
              "Type": "CreateServiceAccountForm",
              "Name": "body"
            }
          ],
          "Response": {
            "AvatarUrl": "",
            "Id": 2,
            "IsDisabled": false,
            "IsExternal": false,
            "Login": "sa-1-randomstring601",
            "Name": "RandomString601",
            "OrgId": 1,
            "Role": "Editor",
            "Uid": "{Scrubbed}"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateSession_http_post_Async",
          "ApiCallOrderId": 48,
          "RequestParameters": [
            {
              "Value": {
                "AuthToken": "RandomString580"
              },
              "Type": "CloudMigrationSessionRequestDTO",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateSnapshot_http_post_Async",
          "ApiCallOrderId": 49,
          "RequestParameters": [
            {
              "Value": "RandomString998",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"cloudmigrations.sessionNotFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateTeam_http_post_Async",
          "ApiCallOrderId": 50,
          "RequestParameters": [
            {
              "Value": {
                "Email": "RandomString659",
                "Name": "RandomString563"
              },
              "Type": "CreateTeamCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "Message": "Team created",
            "TeamId": 1,
            "Uid": "{Scrubbed}"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "CreateToken_http_post_Async",
          "ApiCallOrderId": 51,
          "RequestParameters": [
            {
              "Value": 9228,
              "Type": "long",
              "Name": "serviceAccountId"
            },
            {
              "Value": {
                "Name": "RandomString56",
                "SecondsToLive": 9326
              },
              "Type": "AddServiceAccountTokenCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "DatasourceProxyDELETEByUIDcalls_http_delete_Async",
          "ApiCallOrderId": 52,
          "RequestParameters": [
            {
              "Value": "RandomString200",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": "RandomString14",
              "Type": "string",
              "Name": "datasource_proxy_route"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DatasourceProxyDELETEcalls_http_delete_Async",
          "ApiCallOrderId": 53,
          "RequestParameters": [
            {
              "Value": "RandomString856",
              "Type": "string",
              "Name": "id"
            },
            {
              "Value": "RandomString603",
              "Type": "string",
              "Name": "datasource_proxy_route"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DatasourceProxyGETByUIDcalls_http_get_Async",
          "ApiCallOrderId": 54,
          "RequestParameters": [
            {
              "Value": "RandomString603",
              "Type": "string",
              "Name": "datasource_proxy_route"
            },
            {
              "Value": "RandomString406",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "DatasourceProxyGETcalls_http_get_Async",
          "ApiCallOrderId": 55,
          "RequestParameters": [
            {
              "Value": "RandomString112",
              "Type": "string",
              "Name": "datasource_proxy_route"
            },
            {
              "Value": "RandomString595",
              "Type": "string",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "DatasourceProxyPOSTByUIDcalls_http_post_Async",
          "ApiCallOrderId": 56,
          "RequestParameters": [
            {
              "Value": "RandomString49",
              "Type": "string",
              "Name": "datasource_proxy_route"
            },
            {
              "Value": "RandomString722",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {},
              "Type": "object",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "DatasourceProxyPOSTcalls_http_post_Async",
          "ApiCallOrderId": 57,
          "RequestParameters": [
            {
              "Value": "RandomString444",
              "Type": "string",
              "Name": "datasource_proxy_route"
            },
            {
              "Value": "RandomString701",
              "Type": "string",
              "Name": "id"
            },
            {
              "Value": {},
              "Type": "object",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "DeleteAnnotationByID_http_delete_Async",
          "ApiCallOrderId": 58,
          "RequestParameters": [
            {
              "Value": "RandomString662",
              "Type": "string",
              "Name": "annotation_id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"annotationId is invalid\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteAPIkey_http_delete_Async",
          "ApiCallOrderId": 59,
          "RequestParameters": [
            {
              "Value": 5137,
              "Type": "long",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteCloudMigrationToken_http_delete_Async",
          "ApiCallOrderId": 60,
          "RequestParameters": [
            {
              "Value": "RandomString666",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteCorrelation_http_delete_Async",
          "ApiCallOrderId": 61,
          "RequestParameters": [
            {
              "Value": "RandomString862",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": "RandomString128",
              "Type": "string",
              "Name": "correlationUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteDashboardByUID_http_delete_Async",
          "ApiCallOrderId": 62,
          "RequestParameters": [
            {
              "Value": "RandomString546",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteDashboardSnapshot_http_delete_Async",
          "ApiCallOrderId": 63,
          "RequestParameters": [
            {
              "Value": "RandomString304",
              "Type": "string",
              "Name": "key"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteDashboardSnapshotByDeleteKey_http_get_Async",
          "ApiCallOrderId": 64,
          "RequestParameters": [
            {
              "Value": "RandomString167",
              "Type": "string",
              "Name": "deleteKey"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "DeleteDataSourceByID_http_delete_Async",
          "ApiCallOrderId": 65,
          "RequestParameters": [
            {
              "Value": "RandomString708",
              "Type": "string",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"id is invalid\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteDataSourceByName_http_delete_Async",
          "ApiCallOrderId": 66,
          "RequestParameters": [
            {
              "Value": "RandomString123",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteDataSourceByUID_http_delete_Async",
          "ApiCallOrderId": 67,
          "RequestParameters": [
            {
              "Value": "RandomString336",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteFolder_http_delete_Async",
          "ApiCallOrderId": 68,
          "RequestParameters": [
            {
              "Value": "RandomString268",
              "Type": "string",
              "Name": "folder_uid"
            },
            {
              "Value": false,
              "Type": "bool?",
              "Name": "forceDeleteRules"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteGroupMappings_http_delete_Async",
          "ApiCallOrderId": 69,
          "RequestParameters": [
            {
              "Value": "RandomString699",
              "Type": "string",
              "Name": "group_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteLibraryElementByUID_http_delete_Async",
          "ApiCallOrderId": 70,
          "RequestParameters": [
            {
              "Value": "RandomString580",
              "Type": "string",
              "Name": "library_element_uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteLicenseToken_http_delete_Async",
          "ApiCallOrderId": 71,
          "RequestParameters": [
            {
              "Value": {
                "Instance": "RandomString32"
              },
              "Type": "DeleteTokenCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteOrgByID_http_delete_Async",
          "ApiCallOrderId": 72,
          "RequestParameters": [
            {
              "Value": 2329,
              "Type": "long",
              "Name": "org_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeletePlaylist_http_delete_Async",
          "ApiCallOrderId": 73,
          "RequestParameters": [
            {
              "Value": "RandomString57",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeletePublicDashboard_http_delete_Async",
          "ApiCallOrderId": 74,
          "RequestParameters": [
            {
              "Value": "RandomString960",
              "Type": "string",
              "Name": "dashboardUid"
            },
            {
              "Value": "RandomString724",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"publicdashboards.notFound\",\"message\":\"Dashboard not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteQuery_http_delete_Async",
          "ApiCallOrderId": 75,
          "RequestParameters": [
            {
              "Value": "RandomString735",
              "Type": "string",
              "Name": "query_history_uid"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteRecordingRule_http_delete_Async",
          "ApiCallOrderId": 76,
          "RequestParameters": [
            {
              "Value": 5148,
              "Type": "long",
              "Name": "recordingRuleID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteRecordingRuleWriteTarget_http_delete_Async",
          "ApiCallOrderId": 77,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteReport_http_delete_Async",
          "ApiCallOrderId": 78,
          "RequestParameters": [
            {
              "Value": 9324,
              "Type": "long",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteRole_http_delete_Async",
          "ApiCallOrderId": 79,
          "RequestParameters": [
            {
              "Type": "bool?",
              "Name": "force"
            },
            {
              "Type": "bool?",
              "Name": "global"
            },
            {
              "Value": "RandomString658",
              "Type": "string",
              "Name": "roleUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteServiceAccount_http_delete_Async",
          "ApiCallOrderId": 80,
          "RequestParameters": [
            {
              "Value": 8226,
              "Type": "long",
              "Name": "serviceAccountId"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteSession_http_delete_Async",
          "ApiCallOrderId": 81,
          "RequestParameters": [
            {
              "Value": "RandomString684",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"cloudmigrations.sessionNotFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteTeamByID_http_delete_Async",
          "ApiCallOrderId": 82,
          "RequestParameters": [
            {
              "Value": "RandomString706",
              "Type": "string",
              "Name": "team_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DeleteToken_http_delete_Async",
          "ApiCallOrderId": 83,
          "RequestParameters": [
            {
              "Value": 9055,
              "Type": "long",
              "Name": "tokenId"
            },
            {
              "Value": 4637,
              "Type": "long",
              "Name": "serviceAccountId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "DisableDataSourceCache_http_post_Async",
          "ApiCallOrderId": 84,
          "RequestParameters": [
            {
              "Value": "RandomString775",
              "Type": "string",
              "Name": "dataSourceUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "EnableDataSourceCache_http_post_Async",
          "ApiCallOrderId": 85,
          "RequestParameters": [
            {
              "Value": "RandomString327",
              "Type": "string",
              "Name": "dataSourceUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "GetAccessControlStatus_http_get_Async",
          "ApiCallOrderId": 86,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetAnnotationByID_http_get_Async",
          "ApiCallOrderId": 87,
          "RequestParameters": [
            {
              "Value": "RandomString470",
              "Type": "string",
              "Name": "annotation_id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"annotationId is invalid\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetAnnotations_http_get_Async",
          "ApiCallOrderId": 88,
          "RequestParameters": [
            {
              "Type": "long?",
              "Name": "from"
            },
            {
              "Value": 5479,
              "Type": "long?",
              "Name": "to"
            },
            {
              "Value": 5108,
              "Type": "long?",
              "Name": "userId"
            },
            {
              "Value": 1576,
              "Type": "long?",
              "Name": "alertId"
            },
            {
              "Type": "long?",
              "Name": "dashboardId"
            },
            {
              "Value": "RandomString86",
              "Type": "string",
              "Name": "dashboardUID"
            },
            {
              "Type": "long?",
              "Name": "panelId"
            },
            {
              "Type": "long?",
              "Name": "limit"
            },
            {
              "Value": [
                "RandomString11",
                "RandomString849",
                "RandomString609"
              ],
              "Type": "IEnumerable<string>",
              "Name": "tags"
            },
            {
              "Type": "Nullable<Type>",
              "Name": "type"
            },
            {
              "Type": "bool?",
              "Name": "matchAny"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"Invalid dashboard UID in annotation request\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetAnnotationTags_http_get_Async",
          "ApiCallOrderId": 89,
          "RequestParameters": [
            {
              "Value": "RandomString793",
              "Type": "string",
              "Name": "tag"
            },
            {
              "Value": "RandomString197",
              "Type": "string",
              "Name": "limit"
            }
          ],
          "Response": {
            "Result": {
              "Tags": []
            }
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetAPIkeys_http_get_Async",
          "ApiCallOrderId": 90,
          "RequestParameters": [
            {
              "Value": true,
              "Type": "bool?",
              "Name": "includeExpired"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCloudMigrationToken_http_get_Async",
          "ApiCallOrderId": 91,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCorrelation_http_get_Async",
          "ApiCallOrderId": 92,
          "RequestParameters": [
            {
              "Value": "RandomString229",
              "Type": "string",
              "Name": "sourceUID"
            },
            {
              "Value": "RandomString99",
              "Type": "string",
              "Name": "correlationUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCorrelations_http_get_Async",
          "ApiCallOrderId": 93,
          "RequestParameters": [
            {
              "Value": 7222,
              "Type": "long?",
              "Name": "limit"
            },
            {
              "Value": 2768,
              "Type": "long?",
              "Name": "page"
            },
            {
              "Value": [
                "RandomString475",
                "RandomString635",
                "RandomString938"
              ],
              "Type": "IEnumerable<string>",
              "Name": "sourceUID"
            }
          ],
          "Response": {
            "StatusCode": 200,
            "Message": "Could not deserialize the response body stream as System.Collections.Generic.ICollection`1[[GeneratedClientMyNamespaceRuntimeCompilationBuild1673116976.Correlation, DynamicGeneratedClient, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]].  Status: 200 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCorrelationsBySourceUID_http_get_Async",
          "ApiCallOrderId": 94,
          "RequestParameters": [
            {
              "Value": "RandomString778",
              "Type": "string",
              "Name": "sourceUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCurrentOrg_http_get_Async",
          "ApiCallOrderId": 95,
          "RequestParameters": [],
          "Response": {
            "Address": {
              "Address1": "",
              "Address2": "",
              "City": "",
              "Country": "",
              "State": "",
              "ZipCode": ""
            },
            "Id": 1,
            "Name": "Main Org."
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCurrentOrgQuota_http_get_Async",
          "ApiCallOrderId": 96,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCustomPermissionsCSV_http_get_Async",
          "ApiCallOrderId": 97,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetCustomPermissionsReport_http_get_Async",
          "ApiCallOrderId": 98,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardByUID_http_get_Async",
          "ApiCallOrderId": 99,
          "RequestParameters": [
            {
              "Value": "RandomString557",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardPermissionsListByID_http_get_Async",
          "ApiCallOrderId": 100,
          "RequestParameters": [
            {
              "Value": 7729,
              "Type": "long",
              "Name": "dashboardID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardPermissionsListByUID_http_get_Async",
          "ApiCallOrderId": 101,
          "RequestParameters": [
            {
              "Value": "RandomString912",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardSnapshot_http_get_Async",
          "ApiCallOrderId": 102,
          "RequestParameters": [
            {
              "Value": "RandomString753",
              "Type": "string",
              "Name": "key"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardTags_http_get_Async",
          "ApiCallOrderId": 103,
          "RequestParameters": [],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardVersionByID_http_get_Async",
          "ApiCallOrderId": 104,
          "RequestParameters": [
            {
              "Value": 3861,
              "Type": "long",
              "Name": "dashboardID"
            },
            {
              "Value": 8968,
              "Type": "long",
              "Name": "dashboardVersionID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardVersionByUID_http_get_Async",
          "ApiCallOrderId": 105,
          "RequestParameters": [
            {
              "Value": 1736,
              "Type": "long",
              "Name": "dashboardVersionID"
            },
            {
              "Value": "RandomString830",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardVersionsByID_http_get_Async",
          "ApiCallOrderId": 106,
          "RequestParameters": [
            {
              "Value": 4033,
              "Type": "long",
              "Name": "dashboardID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDashboardVersionsByUID_http_get_Async",
          "ApiCallOrderId": 107,
          "RequestParameters": [
            {
              "Value": "RandomString149",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": 1032,
              "Type": "long?",
              "Name": "limit"
            },
            {
              "Value": 3804,
              "Type": "long?",
              "Name": "start"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDataSourceByID_http_get_Async",
          "ApiCallOrderId": 108,
          "RequestParameters": [
            {
              "Value": "RandomString293",
              "Type": "string",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDataSourceByName_http_get_Async",
          "ApiCallOrderId": 109,
          "RequestParameters": [
            {
              "Value": "RandomString514",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Data source not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDataSourceByUID_http_get_Async",
          "ApiCallOrderId": 110,
          "RequestParameters": [
            {
              "Value": "RandomString350",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDataSourceCacheConfig_http_get_Async",
          "ApiCallOrderId": 111,
          "RequestParameters": [
            {
              "Value": "RandomString322",
              "Type": "string",
              "Name": "dataSourceUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDataSourceIdByName_http_get_Async",
          "ApiCallOrderId": 112,
          "RequestParameters": [
            {
              "Value": "RandomString285",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetDataSources_http_get_Async",
          "ApiCallOrderId": 113,
          "RequestParameters": [],
          "Response": [
            {
              "Access": "RandomString779",
              "BasicAuth": false,
              "Database": "RandomString157",
              "Id": 1,
              "IsDefault": true,
              "JsonData": {},
              "Name": "RandomString952",
              "OrgId": 1,
              "ReadOnly": false,
              "Type": "RandomString25",
              "TypeLogoUrl": "public/img/icn-datasource.svg",
              "TypeName": "RandomString25",
              "Uid": "{Scrubbed}",
              "Url": "{Scrubbed}",
              "User": "RandomString919"
            }
          ],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetFolderByID_http_get_Async",
          "ApiCallOrderId": 114,
          "RequestParameters": [
            {
              "Value": 4134,
              "Type": "long",
              "Name": "folder_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetFolderByUID_http_get_Async",
          "ApiCallOrderId": 115,
          "RequestParameters": [
            {
              "Value": "RandomString863",
              "Type": "string",
              "Name": "folder_uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetFolderDescendantCounts_http_get_Async",
          "ApiCallOrderId": 116,
          "RequestParameters": [
            {
              "Value": "RandomString122",
              "Type": "string",
              "Name": "folder_uid"
            }
          ],
          "Response": {},
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetFolderPermissionList_http_get_Async",
          "ApiCallOrderId": 117,
          "RequestParameters": [
            {
              "Value": "RandomString592",
              "Type": "string",
              "Name": "folder_uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetFolders_http_get_Async",
          "ApiCallOrderId": 118,
          "RequestParameters": [
            {
              "Type": "long?",
              "Name": "limit"
            },
            {
              "Type": "long?",
              "Name": "page"
            },
            {
              "Value": "RandomString35",
              "Type": "string",
              "Name": "parentUid"
            },
            {
              "Type": "Nullable<Permission2>",
              "Name": "permission"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"[guardian.dashboardNotFound] failed to get dashboard by UID: Dashboard not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetGroupRoles_http_get_Async",
          "ApiCallOrderId": 119,
          "RequestParameters": [
            {
              "Value": "RandomString237",
              "Type": "string",
              "Name": "group_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetHealth_http_get_Async",
          "ApiCallOrderId": 120,
          "RequestParameters": [],
          "Response": {
            "Commit": "c6c701cf5be984b088b9d51690b474ab63ca86ff",
            "Database": "ok",
            "Version": "11.5.1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetHomeDashboard_http_get_Async",
          "ApiCallOrderId": 121,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 200,
            "Message": "Could not deserialize the response body stream as GeneratedClientMyNamespaceRuntimeCompilationBuild1673116976.GetHomeDashboardResponse.  Status: 200 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetLDAPStatus_http_get_Async",
          "ApiCallOrderId": 122,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"LDAP is not enabled\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetLibraryElementByName_http_get_Async",
          "ApiCallOrderId": 123,
          "RequestParameters": [
            {
              "Value": "RandomString92",
              "Type": "string",
              "Name": "library_element_name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetLibraryElementByUID_http_get_Async",
          "ApiCallOrderId": 124,
          "RequestParameters": [
            {
              "Value": "RandomString816",
              "Type": "string",
              "Name": "library_element_uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetLibraryElementConnections_http_get_Async",
          "ApiCallOrderId": 125,
          "RequestParameters": [
            {
              "Value": "RandomString927",
              "Type": "string",
              "Name": "library_element_uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetLibraryElements_http_get_Async",
          "ApiCallOrderId": 126,
          "RequestParameters": [
            {
              "Value": "RandomString411",
              "Type": "string",
              "Name": "searchString"
            },
            {
              "Type": "Nullable<Kind>",
              "Name": "kind"
            },
            {
              "Type": "Nullable<SortDirection>",
              "Name": "sortDirection"
            },
            {
              "Value": "RandomString632",
              "Type": "string",
              "Name": "typeFilter"
            },
            {
              "Value": "RandomString672",
              "Type": "string",
              "Name": "excludeUid"
            },
            {
              "Value": "RandomString726",
              "Type": "string",
              "Name": "folderFilter"
            },
            {
              "Type": "long?",
              "Name": "perPage"
            },
            {
              "Type": "long?",
              "Name": "page"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetLicenseToken_http_get_Async",
          "ApiCallOrderId": 127,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetMappedGroups_http_get_Async",
          "ApiCallOrderId": 128,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetMetadata_http_get_Async",
          "ApiCallOrderId": 129,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetOrgByID_http_get_Async",
          "ApiCallOrderId": 130,
          "RequestParameters": [
            {
              "Value": 2829,
              "Type": "long",
              "Name": "org_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Organization not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetOrgByName_http_get_Async",
          "ApiCallOrderId": 131,
          "RequestParameters": [
            {
              "Value": "RandomString857",
              "Type": "string",
              "Name": "org_name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Organization not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetOrgPreferences_http_get_Async",
          "ApiCallOrderId": 132,
          "RequestParameters": [],
          "Response": {},
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetOrgQuota_http_get_Async",
          "ApiCallOrderId": 133,
          "RequestParameters": [
            {
              "Value": 663,
              "Type": "long",
              "Name": "org_id"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetOrgUsers_http_get_Async",
          "ApiCallOrderId": 134,
          "RequestParameters": [
            {
              "Value": 1953,
              "Type": "long",
              "Name": "org_id"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetOrgUsersForCurrentOrg_http_get_Async",
          "ApiCallOrderId": 135,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 200,
            "Message": "Could not deserialize the response body stream as System.Collections.Generic.ICollection`1[[GeneratedClientMyNamespaceRuntimeCompilationBuild1673116976.OrgUserDTO, DynamicGeneratedClient, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]].  Status: 200 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetOrgUsersForCurrentOrgLookup_http_get_Async",
          "ApiCallOrderId": 136,
          "RequestParameters": [
            {
              "Value": "RandomString31",
              "Type": "string",
              "Name": "query"
            },
            {
              "Type": "long?",
              "Name": "limit"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetPendingOrgInvites_http_get_Async",
          "ApiCallOrderId": 137,
          "RequestParameters": [],
          "Response": [
            {
              "Code": "{Scrubbed}",
              "CreatedOn": "DateTimeOffset_1",
              "Email": "RandomString704",
              "EmailSent": false,
              "EmailSentOn": "DateTimeOffset_1",
              "Id": 1,
              "InvitedByEmail": "admin@localhost",
              "InvitedByLogin": "admin",
              "InvitedByName": "",
              "Name": "RandomString882",
              "OrgId": 1,
              "Role": "Editor",
              "Status": "InvitePending",
              "Url": "{Scrubbed}"
            }
          ],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetPlaylist_http_get_Async",
          "ApiCallOrderId": 138,
          "RequestParameters": [
            {
              "Value": "RandomString82",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetPlaylistItems_http_get_Async",
          "ApiCallOrderId": 139,
          "RequestParameters": [
            {
              "Value": "RandomString106",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetProviderSettings_http_get_Async",
          "ApiCallOrderId": 140,
          "RequestParameters": [
            {
              "Value": "RandomString853",
              "Type": "string",
              "Name": "key"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetPublicAnnotations_http_get_Async",
          "ApiCallOrderId": 141,
          "RequestParameters": [
            {
              "Value": "RandomString967",
              "Type": "string",
              "Name": "accessToken"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestPublicError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetPublicDashboard_http_get_Async",
          "ApiCallOrderId": 142,
          "RequestParameters": [
            {
              "Value": "RandomString851",
              "Type": "string",
              "Name": "dashboardUid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundPublicError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetRecordingRuleWriteTarget_http_get_Async",
          "ApiCallOrderId": 143,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetReport_http_get_Async",
          "ApiCallOrderId": 144,
          "RequestParameters": [
            {
              "Value": 7258,
              "Type": "long",
              "Name": "id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetReports_http_get_Async",
          "ApiCallOrderId": 145,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetReportSettings_http_get_Async",
          "ApiCallOrderId": 146,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetResourceDescription_http_get_Async",
          "ApiCallOrderId": 147,
          "RequestParameters": [
            {
              "Value": "RandomString246",
              "Type": "string",
              "Name": "resource"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetResourcePermissions_http_get_Async",
          "ApiCallOrderId": 148,
          "RequestParameters": [
            {
              "Value": "RandomString683",
              "Type": "string",
              "Name": "resource"
            },
            {
              "Value": "RandomString364",
              "Type": "string",
              "Name": "resourceID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetRole_http_get_Async",
          "ApiCallOrderId": 149,
          "RequestParameters": [
            {
              "Value": "RandomString568",
              "Type": "string",
              "Name": "roleUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetRoleAssignments_http_get_Async",
          "ApiCallOrderId": 150,
          "RequestParameters": [
            {
              "Value": "RandomString560",
              "Type": "string",
              "Name": "roleUID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSAMLLogout_http_get_Async",
          "ApiCallOrderId": 151,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSession_http_get_Async",
          "ApiCallOrderId": 152,
          "RequestParameters": [
            {
              "Value": "RandomString566",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"cloudmigrations.sessionNotFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSessionList_http_get_Async",
          "ApiCallOrderId": 153,
          "RequestParameters": [],
          "Response": {
            "Sessions": []
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSettingsImage_http_get_Async",
          "ApiCallOrderId": 154,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetShapshotList_http_get_Async",
          "ApiCallOrderId": 155,
          "RequestParameters": [
            {
              "Type": "long?",
              "Name": "page"
            },
            {
              "Type": "long?",
              "Name": "limit"
            },
            {
              "Value": "RandomString96",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": "RandomString521",
              "Type": "string",
              "Name": "sort"
            }
          ],
          "Response": {
            "Snapshots": []
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSharingOptions_http_get_Async",
          "ApiCallOrderId": 156,
          "RequestParameters": [],
          "Response": {
            "ExternalEnabled": true,
            "ExternalSnapshotName": "Publish to snapshots.raintank.io",
            "ExternalSnapshotURL": "https://snapshots.raintank.io"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSignedInUser_http_get_Async",
          "ApiCallOrderId": 157,
          "RequestParameters": [],
          "Response": {
            "AuthLabels": [],
            "AvatarUrl": "/avatar/46d229b033af06a191ff2267bca9ae56",
            "CreatedAt": "{Scrubbed}",
            "Email": "admin@localhost",
            "Id": 1,
            "IsDisabled": false,
            "IsExternal": false,
            "IsExternallySynced": false,
            "IsGrafanaAdmin": true,
            "IsGrafanaAdminExternallySynced": false,
            "Login": "admin",
            "Name": "",
            "OrgId": 1,
            "Theme": "",
            "Uid": "{Scrubbed}",
            "UpdatedAt": "{Scrubbed}"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSignedInUserOrgList_http_get_Async",
          "ApiCallOrderId": 158,
          "RequestParameters": [],
          "Response": [
            {
              "Name": "Main Org.",
              "OrgId": 1,
              "Role": "Admin"
            },
            {
              "Name": "RandomString445",
              "OrgId": 2,
              "Role": "Admin"
            }
          ],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSignedInUserTeamList_http_get_Async",
          "ApiCallOrderId": 159,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 200,
            "Message": "Could not deserialize the response body stream as System.Collections.Generic.ICollection`1[[GeneratedClientMyNamespaceRuntimeCompilationBuild1673116976.TeamDTO, DynamicGeneratedClient, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]].  Status: 200 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSLO_http_get_Async",
          "ApiCallOrderId": 160,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSnapshot_http_get_Async",
          "ApiCallOrderId": 161,
          "RequestParameters": [
            {
              "Type": "long?",
              "Name": "resultPage"
            },
            {
              "Value": 4343,
              "Type": "long?",
              "Name": "resultLimit"
            },
            {
              "Value": "RandomString340",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": "RandomString755",
              "Type": "string",
              "Name": "snapshotUid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"cloudmigrations.sessionNotFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetStatus_http_get_Async",
          "ApiCallOrderId": 162,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetSyncStatus_http_get_Async",
          "ApiCallOrderId": 163,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetTeamByID_http_get_Async",
          "ApiCallOrderId": 164,
          "RequestParameters": [
            {
              "Value": "RandomString128",
              "Type": "string",
              "Name": "team_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetTeamGroupsApi_http_get_Async",
          "ApiCallOrderId": 165,
          "RequestParameters": [
            {
              "Value": 5386,
              "Type": "long",
              "Name": "teamId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetTeamLBACRulesApi_http_get_Async",
          "ApiCallOrderId": 166,
          "RequestParameters": [
            {
              "Value": "RandomString526",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetTeamMembers_http_get_Async",
          "ApiCallOrderId": 167,
          "RequestParameters": [
            {
              "Value": "RandomString818",
              "Type": "string",
              "Name": "team_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetTeamPreferences_http_get_Async",
          "ApiCallOrderId": 168,
          "RequestParameters": [
            {
              "Value": "RandomString759",
              "Type": "string",
              "Name": "team_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserAuthTokens_http_get_Async",
          "ApiCallOrderId": 169,
          "RequestParameters": [],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserByID_http_get_Async",
          "ApiCallOrderId": 170,
          "RequestParameters": [
            {
              "Value": 4746,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserByLoginOrEmail_http_get_Async",
          "ApiCallOrderId": 171,
          "RequestParameters": [
            {
              "Value": "RandomString782",
              "Type": "string",
              "Name": "loginOrEmail"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserFromLDAP_http_get_Async",
          "ApiCallOrderId": 172,
          "RequestParameters": [
            {
              "Value": "RandomString846",
              "Type": "string",
              "Name": "user_name"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"LDAP is not enabled\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserOrgList_http_get_Async",
          "ApiCallOrderId": 173,
          "RequestParameters": [
            {
              "Value": 699,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserPreferences_http_get_Async",
          "ApiCallOrderId": 174,
          "RequestParameters": [],
          "Response": {},
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserQuota_http_get_Async",
          "ApiCallOrderId": 175,
          "RequestParameters": [
            {
              "Value": 6166,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserQuotas_http_get_Async",
          "ApiCallOrderId": 176,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"statusCode\":400,\"messageId\":\"quota.bad-request\",\"message\":\"BadRequest\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "GetUserTeams_http_get_Async",
          "ApiCallOrderId": 177,
          "RequestParameters": [
            {
              "Value": 8742,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "HardDeleteDashboardByUID_http_delete_Async",
          "ApiCallOrderId": 178,
          "RequestParameters": [
            {
              "Value": "RandomString359",
              "Type": "string",
              "Name": "uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "ImportDashboard_http_post_Async",
          "ApiCallOrderId": 179,
          "RequestParameters": [
            {
              "Value": {
                "Dashboard": {},
                "FolderId": 303,
                "FolderUid": "RandomString35",
                "Inputs": [
                  {
                    "Name": "RandomString43",
                    "PluginId": "RandomString741",
                    "Type": "RandomString806",
                    "Value": "RandomString122"
                  },
                  {
                    "Name": "RandomString383",
                    "PluginId": "RandomString806",
                    "Type": "RandomString739",
                    "Value": "RandomString515"
                  },
                  {
                    "Name": "RandomString595",
                    "PluginId": "RandomString812",
                    "Type": "RandomString764",
                    "Value": "RandomString92"
                  }
                ],
                "Overwrite": true,
                "Path": "RandomString769",
                "PluginId": "RandomString647"
              },
              "Type": "ImportDashboardRequest",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "ListAllProvidersSettings_http_get_Async",
          "ApiCallOrderId": 180,
          "RequestParameters": [],
          "Response": [
            {
              "Id": "",
              "Provider": "github",
              "Settings": {
                "allowAssignGrafanaAdmin": false,
                "allowedDomains": "",
                "allowedGroups": "",
                "allowedOrganizations": "",
                "allowSignUp": true,
                "apiUrl": "https://api.github.com/user",
                "authStyle": "",
                "authUrl": "https://github.com/login/oauth/authorize",
                "autoLogin": false,
                "clientAuthentication": "",
                "clientId": "some_id",
                "clientSecret": "",
                "emailAttributeName": "",
                "emailAttributePath": "",
                "emptyScopes": false,
                "enabled": false,
                "federatedCredentialAudience": "",
                "groupsAttributePath": "",
                "hostedDomain": "",
                "icon": "github",
                "managedIdentityClientId": "",
                "name": "GitHub",
                "orgAttributePath": "",
                "orgMapping": "",
                "roleAttributePath": "",
                "roleAttributeStrict": false,
                "scopes": "user:email,read:org",
                "signoutRedirectUrl": "",
                "skipOrgRoleSync": false,
                "teamIds": "",
                "teamIdsAttributePath": "",
                "teamsUrl": "",
                "tlsClientCa": "",
                "tlsClientCert": "",
                "tlsClientKey": "",
                "tlsSkipVerifyInsecure": false,
                "tokenUrl": "https://github.com/login/oauth/access_token",
                "usePkce": false,
                "useRefreshToken": false
              },
              "Source": "system"
            },
            {
              "Id": "",
              "Provider": "gitlab",
              "Settings": {
                "allowAssignGrafanaAdmin": false,
                "allowedDomains": "",
                "allowedGroups": "",
                "allowSignUp": true,
                "apiUrl": "https://gitlab.com/api/v4",
                "authStyle": "",
                "authUrl": "https://gitlab.com/oauth/authorize",
                "autoLogin": false,
                "clientAuthentication": "",
                "clientId": "some_id",
                "clientSecret": "",
                "emailAttributeName": "",
                "emailAttributePath": "",
                "emptyScopes": false,
                "enabled": false,
                "federatedCredentialAudience": "",
                "groupsAttributePath": "",
                "hostedDomain": "",
                "icon": "gitlab",
                "managedIdentityClientId": "",
                "name": "GitLab",
                "orgAttributePath": "",
                "orgMapping": "",
                "roleAttributePath": "",
                "roleAttributeStrict": false,
                "scopes": "openid email profile",
                "signoutRedirectUrl": "",
                "skipOrgRoleSync": false,
                "teamIdsAttributePath": "",
                "teamsUrl": "",
                "tlsClientCa": "",
                "tlsClientCert": "",
                "tlsClientKey": "",
                "tlsSkipVerifyInsecure": false,
                "tokenUrl": "https://gitlab.com/oauth/token",
                "usePkce": true,
                "useRefreshToken": true
              },
              "Source": "system"
            },
            {
              "Id": "",
              "Provider": "google",
              "Settings": {
                "allowAssignGrafanaAdmin": false,
                "allowedDomains": "",
                "allowedGroups": "",
                "allowSignUp": true,
                "apiUrl": "https://openidconnect.googleapis.com/v1/userinfo",
                "authStyle": "",
                "authUrl": "https://accounts.google.com/o/oauth2/v2/auth",
                "autoLogin": false,
                "clientAuthentication": "",
                "clientId": "some_client_id",
                "clientSecret": "",
                "emailAttributeName": "",
                "emailAttributePath": "",
                "emptyScopes": false,
                "enabled": false,
                "federatedCredentialAudience": "",
                "groupsAttributePath": "",
                "hostedDomain": "",
                "icon": "google",
                "managedIdentityClientId": "",
                "name": "Google",
                "orgAttributePath": "",
                "orgMapping": "",
                "roleAttributePath": "",
                "roleAttributeStrict": false,
                "scopes": "openid email profile",
                "signoutRedirectUrl": "",
                "skipOrgRoleSync": true,
                "teamIdsAttributePath": "",
                "teamsUrl": "",
                "tlsClientCa": "",
                "tlsClientCert": "",
                "tlsClientKey": "",
                "tlsSkipVerifyInsecure": false,
                "tokenUrl": "https://oauth2.googleapis.com/token",
                "usePkce": true,
                "useRefreshToken": true,
                "validateHd": true
              },
              "Source": "system"
            },
            {
              "Id": "",
              "Provider": "generic_oauth",
              "Settings": {
                "allowAssignGrafanaAdmin": false,
                "allowedDomains": "",
                "allowedGroups": "",
                "allowedOrganizations": "",
                "allowSignUp": true,
                "apiUrl": "",
                "authStyle": "",
                "authUrl": "",
                "autoLogin": false,
                "clientAuthentication": "",
                "clientId": "some_id",
                "clientSecret": "",
                "emailAttributeName": "email:primary",
                "emailAttributePath": "",
                "emptyScopes": false,
                "enabled": false,
                "federatedCredentialAudience": "",
                "groupsAttributePath": "",
                "hostedDomain": "",
                "icon": "signin",
                "idTokenAttributeName": "",
                "loginAttributePath": "",
                "managedIdentityClientId": "",
                "name": "OAuth",
                "nameAttributePath": "",
                "orgAttributePath": "",
                "orgMapping": "",
                "roleAttributePath": "",
                "roleAttributeStrict": false,
                "scopes": "user:email",
                "signoutRedirectUrl": "",
                "skipOrgRoleSync": false,
                "teamIds": "",
                "teamIdsAttributePath": "",
                "teamsUrl": "",
                "tlsClientCa": "",
                "tlsClientCert": "",
                "tlsClientKey": "",
                "tlsSkipVerifyInsecure": false,
                "tokenUrl": "",
                "usePkce": false,
                "useRefreshToken": false
              },
              "Source": "system"
            },
            {
              "Id": "",
              "Provider": "azuread",
              "Settings": {
                "allowAssignGrafanaAdmin": false,
                "allowedDomains": "",
                "allowedGroups": "",
                "allowedOrganizations": "",
                "allowSignUp": true,
                "apiUrl": "",
                "authStyle": "",
                "authUrl": "https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/authorize",
                "autoLogin": false,
                "clientAuthentication": "",
                "clientId": "some_client_id",
                "clientSecret": "",
                "emailAttributeName": "",
                "emailAttributePath": "",
                "emptyScopes": false,
                "enabled": false,
                "federatedCredentialAudience": "",
                "forceUseGraphApi": false,
                "groupsAttributePath": "",
                "hostedDomain": "",
                "icon": "microsoft",
                "managedIdentityClientId": "",
                "name": "Microsoft",
                "orgAttributePath": "",
                "orgMapping": "",
                "roleAttributePath": "",
                "roleAttributeStrict": false,
                "scopes": "openid email profile",
                "signoutRedirectUrl": "",
                "skipOrgRoleSync": false,
                "teamIdsAttributePath": "",
                "teamsUrl": "",
                "tlsClientCa": "",
                "tlsClientCert": "",
                "tlsClientKey": "",
                "tlsSkipVerifyInsecure": false,
                "tokenUrl": "https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/token",
                "usePkce": true,
                "useRefreshToken": true
              },
              "Source": "system"
            },
            {
              "Id": "",
              "Provider": "okta",
              "Settings": {
                "allowAssignGrafanaAdmin": false,
                "allowedDomains": "",
                "allowedGroups": "",
                "allowSignUp": true,
                "apiUrl": "https://<tenant-id>.okta.com/oauth2/v1/userinfo",
                "authStyle": "",
                "authUrl": "https://<tenant-id>.okta.com/oauth2/v1/authorize",
                "autoLogin": false,
                "clientAuthentication": "",
                "clientId": "some_id",
                "clientSecret": "",
                "emailAttributeName": "",
                "emailAttributePath": "",
                "emptyScopes": false,
                "enabled": false,
                "federatedCredentialAudience": "",
                "groupsAttributePath": "",
                "hostedDomain": "",
                "icon": "okta",
                "managedIdentityClientId": "",
                "name": "Okta",
                "orgAttributePath": "",
                "orgMapping": "",
                "roleAttributePath": "",
                "roleAttributeStrict": false,
                "scopes": "openid profile email groups",
                "signoutRedirectUrl": "",
                "skipOrgRoleSync": false,
                "teamIdsAttributePath": "",
                "teamsUrl": "",
                "tlsClientCa": "",
                "tlsClientCert": "",
                "tlsClientKey": "",
                "tlsSkipVerifyInsecure": false,
                "tokenUrl": "https://<tenant-id>.okta.com/oauth2/v1/token",
                "usePkce": true,
                "useRefreshToken": false
              },
              "Source": "system"
            }
          ],
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListDevices_http_get_Async",
          "ApiCallOrderId": 181,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListPublicDashboards_http_get_Async",
          "ApiCallOrderId": 182,
          "RequestParameters": [],
          "Response": {
            "Page": 1,
            "PerPage": 1000,
            "PublicDashboards": []
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListRecordingRules_http_get_Async",
          "ApiCallOrderId": 183,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListRoles_http_get_Async",
          "ApiCallOrderId": 184,
          "RequestParameters": [
            {
              "Type": "bool?",
              "Name": "delegatable"
            },
            {
              "Type": "bool?",
              "Name": "includeHidden"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListSortOptions_http_get_Async",
          "ApiCallOrderId": 185,
          "RequestParameters": [],
          "Response": {},
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListTeamRoles_http_get_Async",
          "ApiCallOrderId": 186,
          "RequestParameters": [
            {
              "Value": 4085,
              "Type": "long",
              "Name": "teamId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListTeamsRoles_http_post_Async",
          "ApiCallOrderId": 187,
          "RequestParameters": [
            {
              "Value": {
                "IncludeHidden": true,
                "OrgId": 2545,
                "TeamIds": [
                  3383,
                  8396,
                  6727
                ],
                "UserIds": [
                  2242,
                  1551,
                  2193
                ]
              },
              "Type": "RolesSearchQuery",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "ListTokens_http_get_Async",
          "ApiCallOrderId": 188,
          "RequestParameters": [
            {
              "Value": 3307,
              "Type": "long",
              "Name": "serviceAccountId"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListUserRoles_http_get_Async",
          "ApiCallOrderId": 189,
          "RequestParameters": [
            {
              "Value": 4880,
              "Type": "long",
              "Name": "userId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "ListUsersRoles_http_post_Async",
          "ApiCallOrderId": 190,
          "RequestParameters": [
            {
              "Value": {
                "IncludeHidden": false,
                "OrgId": 2209,
                "TeamIds": [
                  6574,
                  994,
                  9726
                ],
                "UserIds": [
                  77,
                  3517,
                  9578
                ]
              },
              "Type": "RolesSearchQuery",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "MassDeleteAnnotations_http_post_Async",
          "ApiCallOrderId": 191,
          "RequestParameters": [
            {
              "Value": {
                "AnnotationId": 9899,
                "DashboardId": 2837,
                "DashboardUID": "RandomString26",
                "PanelId": 5795
              },
              "Type": "MassDeleteAnnotationsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Annotation not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "MoveFolder_http_post_Async",
          "ApiCallOrderId": 192,
          "RequestParameters": [
            {
              "Value": "RandomString249",
              "Type": "string",
              "Name": "folder_uid"
            },
            {
              "Value": {
                "ParentUid": "RandomString810"
              },
              "Type": "MoveFolderCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PatchAnnotation_http_patch_Async",
          "ApiCallOrderId": 193,
          "RequestParameters": [
            {
              "Value": "RandomString998",
              "Type": "string",
              "Name": "annotation_id"
            },
            {
              "Value": {
                "Data": {},
                "Id": 3867,
                "Tags": [
                  "RandomString365",
                  "RandomString440",
                  "RandomString875"
                ],
                "Text": "RandomString170",
                "Time": 2297,
                "TimeEnd": 4779
              },
              "Type": "PatchAnnotationsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"bad request data\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "PatchOrgPreferences_http_patch_Async",
          "ApiCallOrderId": 194,
          "RequestParameters": [
            {
              "Value": {
                "Cookies": [
                  "RandomString728",
                  "RandomString397",
                  "RandomString353"
                ],
                "HomeDashboardId": 6965,
                "HomeDashboardUID": "RandomString993",
                "Language": "RandomString8",
                "Navbar": {
                  "BookmarkUrls": [
                    "RandomString447",
                    "RandomString972",
                    "RandomString887"
                  ]
                },
                "QueryHistory": {
                  "HomeTab": "RandomString401"
                },
                "WeekStart": "RandomString582"
              },
              "Type": "PatchPrefsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "PatchQueryComment_http_patch_Async",
          "ApiCallOrderId": 195,
          "RequestParameters": [
            {
              "Value": "RandomString2",
              "Type": "string",
              "Name": "query_history_uid"
            },
            {
              "Value": {
                "Comment": "RandomString783"
              },
              "Type": "PatchQueryCommentInQueryHistoryCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "PatchUserPreferences_http_patch_Async",
          "ApiCallOrderId": 196,
          "RequestParameters": [
            {
              "Value": {
                "Cookies": [
                  "RandomString433",
                  "RandomString108",
                  "RandomString917"
                ],
                "HomeDashboardId": 5284,
                "HomeDashboardUID": "RandomString932",
                "Language": "RandomString594",
                "Navbar": {
                  "BookmarkUrls": [
                    "RandomString445",
                    "RandomString629",
                    "RandomString253"
                  ]
                },
                "QueryHistory": {
                  "HomeTab": "RandomString818"
                },
                "Theme": "dark",
                "Timezone": "browser",
                "WeekStart": "RandomString816"
              },
              "Type": "PatchPrefsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "PostACS_http_post_Async",
          "ApiCallOrderId": 197,
          "RequestParameters": [
            {
              "Value": "RandomString884",
              "Type": "string",
              "Name": "relayState"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PostAnnotation_http_post_Async",
          "ApiCallOrderId": 198,
          "RequestParameters": [
            {
              "Value": {
                "DashboardId": 3750,
                "DashboardUID": "RandomString917",
                "Data": {},
                "PanelId": 9143,
                "Tags": [
                  "RandomString280",
                  "RandomString758",
                  "RandomString858"
                ],
                "Text": "RandomString620",
                "Time": 317,
                "TimeEnd": 197
              },
              "Type": "PostAnnotationsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PostDashboard_http_post_Async",
          "ApiCallOrderId": 199,
          "RequestParameters": [
            {
              "Value": {
                "UpdatedAt": "{Scrubbed}",
                "Dashboard": {},
                "FolderId": 7255,
                "FolderUid": "RandomString771",
                "IsFolder": true,
                "Message": "RandomString538",
                "Overwrite": false,
                "UserId": 8998
              },
              "Type": "SaveDashboardCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PostGraphiteAnnotation_http_post_Async",
          "ApiCallOrderId": 200,
          "RequestParameters": [
            {
              "Value": {
                "Data": "RandomString448",
                "Tags": {},
                "What": "RandomString824",
                "When": 5030
              },
              "Type": "PostGraphiteAnnotationsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PostLicenseToken_http_post_Async",
          "ApiCallOrderId": 201,
          "RequestParameters": [
            {
              "Value": {
                "Instance": "RandomString696"
              },
              "Type": "DeleteTokenCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PostRenewLicenseToken_http_post_Async",
          "ApiCallOrderId": 202,
          "RequestParameters": [
            {
              "Value": {},
              "Type": "object",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PostSLO_http_post_Async",
          "ApiCallOrderId": 203,
          "RequestParameters": [
            {
              "Value": "RandomString392",
              "Type": "string",
              "Name": "sAMLRequest"
            },
            {
              "Value": "RandomString399",
              "Type": "string",
              "Name": "sAMLResponse"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "PostSyncUserWithLDAP_http_post_Async",
          "ApiCallOrderId": 204,
          "RequestParameters": [
            {
              "Value": 701,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"LDAP is not enabled\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "QueryMetricsWithExpressions_http_post_Async",
          "ApiCallOrderId": 205,
          "RequestParameters": [
            {
              "Value": {
                "Debug": true,
                "From": "RandomString735",
                "Queries": [
                  {},
                  {},
                  {}
                ],
                "To": "RandomString824"
              },
              "Type": "MetricRequest",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "QueryPublicDashboard_http_post_Async",
          "ApiCallOrderId": 206,
          "RequestParameters": [
            {
              "Value": "RandomString151",
              "Type": "string",
              "Name": "accessToken"
            },
            {
              "Value": 9054,
              "Type": "long",
              "Name": "panelId"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestPublicError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RefreshLicenseStats_http_get_Async",
          "ApiCallOrderId": 207,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "ReloadLDAPCfg_http_post_Async",
          "ApiCallOrderId": 208,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"LDAP is not enabled\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RemoveOrgUser_http_delete_Async",
          "ApiCallOrderId": 209,
          "RequestParameters": [
            {
              "Value": 8916,
              "Type": "long",
              "Name": "org_id"
            },
            {
              "Value": 8931,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RemoveOrgUserForCurrentOrg_http_delete_Async",
          "ApiCallOrderId": 210,
          "RequestParameters": [
            {
              "Value": 3901,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RemoveProviderSettings_http_delete_Async",
          "ApiCallOrderId": 211,
          "RequestParameters": [
            {
              "Value": "RandomString574",
              "Type": "string",
              "Name": "key"
            }
          ],
          "Response": {
            "StatusCode": 403,
            "Message": "ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.  Status: 403 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RemoveTeamGroupApiQuery_http_delete_Async",
          "ApiCallOrderId": 212,
          "RequestParameters": [
            {
              "Value": "RandomString896",
              "Type": "string",
              "Name": "groupId"
            },
            {
              "Value": 2834,
              "Type": "long",
              "Name": "teamId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RemoveTeamMember_http_delete_Async",
          "ApiCallOrderId": 213,
          "RequestParameters": [
            {
              "Value": "RandomString654",
              "Type": "string",
              "Name": "team_id"
            },
            {
              "Value": 3569,
              "Type": "long",
              "Name": "user_id"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RemoveTeamRole_http_delete_Async",
          "ApiCallOrderId": 214,
          "RequestParameters": [
            {
              "Value": "RandomString151",
              "Type": "string",
              "Name": "roleUID"
            },
            {
              "Value": 2494,
              "Type": "long",
              "Name": "teamId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RemoveUserRole_http_delete_Async",
          "ApiCallOrderId": 215,
          "RequestParameters": [
            {
              "Value": true,
              "Type": "bool?",
              "Name": "global"
            },
            {
              "Value": "RandomString383",
              "Type": "string",
              "Name": "roleUID"
            },
            {
              "Value": 8137,
              "Type": "long",
              "Name": "userId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RenderReportCSVs_http_get_Async",
          "ApiCallOrderId": 216,
          "RequestParameters": [
            {
              "Value": "RandomString494",
              "Type": "string",
              "Name": "dashboards"
            },
            {
              "Value": "RandomString443",
              "Type": "string",
              "Name": "title"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RenderReportPDFs_http_get_Async",
          "ApiCallOrderId": 217,
          "RequestParameters": [
            {
              "Value": "RandomString943",
              "Type": "string",
              "Name": "dashboards"
            },
            {
              "Value": "RandomString422",
              "Type": "string",
              "Name": "orientation"
            },
            {
              "Value": "RandomString541",
              "Type": "string",
              "Name": "layout"
            },
            {
              "Value": "RandomString620",
              "Type": "string",
              "Name": "title"
            },
            {
              "Value": "RandomString533",
              "Type": "string",
              "Name": "scaleFactor"
            },
            {
              "Value": "RandomString493",
              "Type": "string",
              "Name": "includeTables"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RestoreDashboardVersionByID_http_post_Async",
          "ApiCallOrderId": 218,
          "RequestParameters": [
            {
              "Value": 7309,
              "Type": "long",
              "Name": "dashboardID"
            },
            {
              "Value": {
                "Version": 3050
              },
              "Type": "RestoreDashboardVersionCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RestoreDashboardVersionByUID_http_post_Async",
          "ApiCallOrderId": 219,
          "RequestParameters": [
            {
              "Value": "RandomString806",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {
                "Version": 7475
              },
              "Type": "RestoreDashboardVersionCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RestoreDeletedDashboardByUID_http_patch_Async",
          "ApiCallOrderId": 220,
          "RequestParameters": [
            {
              "Value": "RandomString100",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {
                "FolderUid": "RandomString47"
              },
              "Type": "RestoreDeletedDashboardCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "RetrieveJWKS_http_get_Async",
          "ApiCallOrderId": 221,
          "RequestParameters": [],
          "Response": {
            "Keys": [
              {
                "Use": "sig"
              }
            ]
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RetrieveServiceAccount_http_get_Async",
          "ApiCallOrderId": 222,
          "RequestParameters": [
            {
              "Value": 3554,
              "Type": "long",
              "Name": "serviceAccountId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RevokeInvite_http_delete_Async",
          "ApiCallOrderId": 223,
          "RequestParameters": [
            {
              "Value": "RandomString967",
              "Type": "string",
              "Name": "invitation_code"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RevokeUserAuthToken_http_post_Async",
          "ApiCallOrderId": 224,
          "RequestParameters": [
            {
              "Value": {
                "AuthTokenId": 4847
              },
              "Type": "RevokeAuthTokenCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"User auth token not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RouteDeleteAlertRule_http_delete_Async",
          "ApiCallOrderId": 225,
          "RequestParameters": [
            {
              "Value": "RandomString424",
              "Type": "string",
              "Name": "uID"
            },
            {
              "Value": "RandomString289",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            }
          ],
          "Response": {},
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RouteDeleteAlertRuleGroup_http_delete_Async",
          "ApiCallOrderId": 226,
          "RequestParameters": [
            {
              "Value": "RandomString443",
              "Type": "string",
              "Name": "folderUID"
            },
            {
              "Value": "RandomString376",
              "Type": "string",
              "Name": "group"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFound  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RouteDeleteContactpoints_http_delete_Async",
          "ApiCallOrderId": 227,
          "RequestParameters": [
            {
              "Value": "RandomString513",
              "Type": "string",
              "Name": "uID"
            }
          ],
          "Response": {},
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RouteDeleteMuteTiming_http_delete_Async",
          "ApiCallOrderId": 228,
          "RequestParameters": [
            {
              "Value": "RandomString251",
              "Type": "string",
              "Name": "name"
            },
            {
              "Value": "RandomString50",
              "Type": "string",
              "Name": "version"
            },
            {
              "Value": "RandomString199",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            }
          ],
          "Response": {},
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RouteDeleteTemplate_http_delete_Async",
          "ApiCallOrderId": 229,
          "RequestParameters": [
            {
              "Value": "RandomString771",
              "Type": "string",
              "Name": "name"
            },
            {
              "Value": "RandomString224",
              "Type": "string",
              "Name": "version"
            }
          ],
          "Response": {},
          "HttpMethod": "delete"
        },
        {
          "MethodName": "RouteExportMuteTiming_http_get_Async",
          "ApiCallOrderId": 230,
          "RequestParameters": [
            {
              "Type": "bool?",
              "Name": "download"
            },
            {
              "Type": "Nullable<Format6>",
              "Name": "format"
            },
            {
              "Value": "RandomString503",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteExportMuteTimings_http_get_Async",
          "ApiCallOrderId": 231,
          "RequestParameters": [
            {
              "Value": false,
              "Type": "bool?",
              "Name": "download"
            },
            {
              "Type": "Nullable<Format5>",
              "Name": "format"
            }
          ],
          "Response": {
            "ApiVersion": 1
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetAlertRule_http_get_Async",
          "ApiCallOrderId": 232,
          "RequestParameters": [
            {
              "Value": "RandomString959",
              "Type": "string",
              "Name": "uID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "Not found.  Status: 404 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetAlertRuleExport_http_get_Async",
          "ApiCallOrderId": 233,
          "RequestParameters": [
            {
              "Value": true,
              "Type": "bool?",
              "Name": "download"
            },
            {
              "Type": "Nullable<Format2>",
              "Name": "format"
            },
            {
              "Value": "RandomString524",
              "Type": "string",
              "Name": "uID"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "Not found.  Status: 404 Response:  {\"message\":\"could not find alert rule\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetAlertRuleGroup_http_get_Async",
          "ApiCallOrderId": 234,
          "RequestParameters": [
            {
              "Value": "RandomString586",
              "Type": "string",
              "Name": "folderUID"
            },
            {
              "Value": "RandomString315",
              "Type": "string",
              "Name": "group"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "Not found.  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"alerting.alert-rule.notFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetAlertRuleGroupExport_http_get_Async",
          "ApiCallOrderId": 235,
          "RequestParameters": [
            {
              "Type": "bool?",
              "Name": "download"
            },
            {
              "Type": "Nullable<Format4>",
              "Name": "format"
            },
            {
              "Value": "RandomString487",
              "Type": "string",
              "Name": "folderUID"
            },
            {
              "Value": "RandomString322",
              "Type": "string",
              "Name": "group"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "Not found.  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"alerting.alert-rule.notFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetAlertRules_http_get_Async",
          "ApiCallOrderId": 236,
          "RequestParameters": [],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetAlertRulesExport_http_get_Async",
          "ApiCallOrderId": 237,
          "RequestParameters": [
            {
              "Type": "bool?",
              "Name": "download"
            },
            {
              "Type": "Nullable<Format>",
              "Name": "format"
            },
            {
              "Value": [
                "RandomString869",
                "RandomString816",
                "RandomString753"
              ],
              "Type": "IEnumerable<string>",
              "Name": "folderUid"
            },
            {
              "Value": "RandomString406",
              "Type": "string",
              "Name": "group"
            },
            {
              "Value": "RandomString106",
              "Type": "string",
              "Name": "ruleUid"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"group and folder should not be specified when a single rule is requested\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetContactpoints_http_get_Async",
          "ApiCallOrderId": 238,
          "RequestParameters": [
            {
              "Value": "RandomString229",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetContactpointsExport_http_get_Async",
          "ApiCallOrderId": 239,
          "RequestParameters": [
            {
              "Value": true,
              "Type": "bool?",
              "Name": "download"
            },
            {
              "Type": "Nullable<Format3>",
              "Name": "format"
            },
            {
              "Value": true,
              "Type": "bool?",
              "Name": "decrypt"
            },
            {
              "Value": "RandomString782",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": {
            "ApiVersion": 1
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetMuteTiming_http_get_Async",
          "ApiCallOrderId": 240,
          "RequestParameters": [
            {
              "Value": "RandomString897",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "Not found.  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"alerting.notifications.time-intervals.notFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetMuteTimings_http_get_Async",
          "ApiCallOrderId": 241,
          "RequestParameters": [],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetPolicyTree_http_get_Async",
          "ApiCallOrderId": 242,
          "RequestParameters": [],
          "Response": {
            "Continue": false,
            "Groupby": [
              "grafana_folder",
              "alertname"
            ],
            "Receiver": "grafana-default-email"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetPolicyTreeExport_http_get_Async",
          "ApiCallOrderId": 243,
          "RequestParameters": [],
          "Response": {
            "ApiVersion": 1,
            "Policies": [
              {
                "Continue": false,
                "Groupby": [
                  "grafana_folder",
                  "alertname"
                ],
                "OrgId": 1,
                "Receiver": "grafana-default-email"
              }
            ]
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetTemplate_http_get_Async",
          "ApiCallOrderId": 244,
          "RequestParameters": [
            {
              "Value": "RandomString363",
              "Type": "string",
              "Name": "name"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "PublicError  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RouteGetTemplates_http_get_Async",
          "ApiCallOrderId": 245,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 200,
            "Message": "Response was null which was not expected.  Status: 200 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "RoutePostAlertRule_http_post_Async",
          "ApiCallOrderId": 246,
          "RequestParameters": [
            {
              "Value": "RandomString936",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "Annotations": {
                  "RandomString130": "RandomString896",
                  "RandomString614": "RandomString660",
                  "RandomString684": "RandomString875"
                },
                "Condition": "RandomString27",
                "Data": [
                  {
                    "DatasourceUid": "RandomString248",
                    "Model": {},
                    "QueryType": "RandomString64",
                    "RefId": "RandomString97",
                    "RelativeTimeRange": {
                      "From": 1693,
                      "To": 1528
                    }
                  },
                  {
                    "DatasourceUid": "RandomString542",
                    "Model": {},
                    "QueryType": "RandomString265",
                    "RefId": "RandomString768",
                    "RelativeTimeRange": {
                      "From": 2905,
                      "To": 3044
                    }
                  },
                  {
                    "DatasourceUid": "RandomString452",
                    "Model": {},
                    "QueryType": "RandomString802",
                    "RefId": "RandomString446",
                    "RelativeTimeRange": {
                      "From": 7030,
                      "To": 7955
                    }
                  }
                ],
                "ExecErrState": "Error",
                "FolderUID": "RandomString142",
                "For": "2.13:00:00",
                "Id": 2735,
                "IsPaused": false,
                "Labels": {
                  "RandomString135": "RandomString521",
                  "RandomString532": "RandomString613",
                  "RandomString545": "RandomString496"
                },
                "NoDataState": "NoData",
                "Notificationsettings": {
                  "Groupby": [
                    "RandomString886",
                    "RandomString942",
                    "RandomString839"
                  ],
                  "Groupinterval": "RandomString773",
                  "Groupwait": "RandomString369",
                  "Mutetimeintervals": [
                    "RandomString417",
                    "RandomString749",
                    "RandomString56"
                  ],
                  "Receiver": "RandomString970",
                  "Repeatinterval": "RandomString194"
                },
                "OrgID": 4004,
                "Provenance": "RandomString141",
                "Record": {
                  "From": "RandomString422",
                  "Metric": "RandomString397"
                },
                "RuleGroup": "RandomString558",
                "Title": "RandomString200",
                "Uid": "{Scrubbed}",
                "Updated": "{Scrubbed}"
              },
              "Type": "ProvisionedAlertRule",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "ValidationError  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RoutePostContactpoints_http_post_Async",
          "ApiCallOrderId": 247,
          "RequestParameters": [
            {
              "Value": "RandomString356",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "DisableResolveMessage": false,
                "Name": "RandomString710",
                "Provenance": "RandomString410",
                "Settings": {},
                "Type": "webhook",
                "Uid": "{Scrubbed}"
              },
              "Type": "EmbeddedContactPoint",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "ValidationError  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RoutePostMuteTiming_http_post_Async",
          "ApiCallOrderId": 248,
          "RequestParameters": [
            {
              "Value": "RandomString974",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "Name": "RandomString324",
                "Timeintervals": [
                  {
                    "Name": "RandomString712"
                  },
                  {
                    "Name": "RandomString435"
                  },
                  {
                    "Name": "RandomString725"
                  }
                ]
              },
              "Type": "MuteTimeInterval",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "ValidationError  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "RoutePutAlertRule_http_put_Async",
          "ApiCallOrderId": 249,
          "RequestParameters": [
            {
              "Value": "RandomString861",
              "Type": "string",
              "Name": "uID"
            },
            {
              "Value": "RandomString203",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "Annotations": {
                  "RandomString222": "RandomString342",
                  "RandomString368": "RandomString178",
                  "RandomString406": "RandomString419"
                },
                "Condition": "RandomString539",
                "Data": [
                  {
                    "DatasourceUid": "RandomString850",
                    "Model": {},
                    "QueryType": "RandomString845",
                    "RefId": "RandomString847",
                    "RelativeTimeRange": {
                      "From": 4433,
                      "To": 6844
                    }
                  },
                  {
                    "DatasourceUid": "RandomString376",
                    "Model": {},
                    "QueryType": "RandomString810",
                    "RefId": "RandomString217",
                    "RelativeTimeRange": {
                      "From": 311,
                      "To": 3498
                    }
                  },
                  {
                    "DatasourceUid": "RandomString935",
                    "Model": {},
                    "QueryType": "RandomString973",
                    "RefId": "RandomString8",
                    "RelativeTimeRange": {
                      "From": 3281,
                      "To": 362
                    }
                  }
                ],
                "ExecErrState": "Alerting",
                "FolderUID": "RandomString250",
                "For": "2.03:00:00",
                "Id": 2827,
                "IsPaused": false,
                "Labels": {
                  "RandomString248": "RandomString791",
                  "RandomString336": "RandomString624",
                  "RandomString509": "RandomString97"
                },
                "NoDataState": "OK",
                "Notificationsettings": {
                  "Groupby": [
                    "RandomString917",
                    "RandomString619",
                    "RandomString503"
                  ],
                  "Groupinterval": "RandomString972",
                  "Groupwait": "RandomString520",
                  "Mutetimeintervals": [
                    "RandomString412",
                    "RandomString857",
                    "RandomString634"
                  ],
                  "Receiver": "RandomString539",
                  "Repeatinterval": "RandomString711"
                },
                "OrgID": 1321,
                "Provenance": "RandomString218",
                "Record": {
                  "From": "RandomString321",
                  "Metric": "RandomString621"
                },
                "RuleGroup": "RandomString195",
                "Title": "RandomString320",
                "Uid": "{Scrubbed}",
                "Updated": "{Scrubbed}"
              },
              "Type": "ProvisionedAlertRule",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "ValidationError  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "RoutePutAlertRuleGroup_http_put_Async",
          "ApiCallOrderId": 250,
          "RequestParameters": [
            {
              "Value": "RandomString521",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": "RandomString68",
              "Type": "string",
              "Name": "folderUID"
            },
            {
              "Value": "RandomString997",
              "Type": "string",
              "Name": "group"
            },
            {
              "Value": {
                "FolderUid": "RandomString202",
                "Interval": 8718,
                "Rules": [
                  {
                    "Annotations": {
                      "RandomString427": "RandomString877",
                      "RandomString652": "RandomString589",
                      "RandomString759": "RandomString47"
                    },
                    "Condition": "RandomString736",
                    "Data": [
                      {},
                      {},
                      {}
                    ],
                    "FolderUID": "RandomString436",
                    "For": "2.21:00:00",
                    "Id": 1594,
                    "IsPaused": true,
                    "Labels": {
                      "RandomString4": "RandomString314",
                      "RandomString689": "RandomString16",
                      "RandomString777": "RandomString542"
                    },
                    "NoDataState": "OK",
                    "Notificationsettings": {
                      "Groupby": [
                        null,
                        null,
                        null
                      ],
                      "Groupinterval": "RandomString463",
                      "Groupwait": "RandomString849",
                      "Mutetimeintervals": [
                        null,
                        null,
                        null
                      ],
                      "Receiver": "RandomString621",
                      "Repeatinterval": "RandomString302"
                    },
                    "OrgID": 1848,
                    "Provenance": "RandomString834",
                    "Record": {
                      "From": "RandomString504",
                      "Metric": "RandomString757"
                    },
                    "RuleGroup": "RandomString344",
                    "Title": "RandomString934",
                    "Uid": "{Scrubbed}",
                    "Updated": "{Scrubbed}"
                  },
                  {
                    "Annotations": {
                      "RandomString145": "RandomString394",
                      "RandomString243": "RandomString371",
                      "RandomString867": "RandomString451"
                    },
                    "Condition": "RandomString985",
                    "Data": [
                      {},
                      {},
                      {}
                    ],
                    "ExecErrState": "Error",
                    "FolderUID": "RandomString207",
                    "For": "3.03:00:00",
                    "Id": 9598,
                    "IsPaused": true,
                    "Labels": {
                      "RandomString100": "RandomString218",
                      "RandomString359": "RandomString273",
                      "RandomString434": "RandomString815"
                    },
                    "NoDataState": "NoData",
                    "Notificationsettings": {
                      "Groupby": [
                        null,
                        null,
                        null
                      ],
                      "Groupinterval": "RandomString382",
                      "Groupwait": "RandomString253",
                      "Mutetimeintervals": [
                        null,
                        null,
                        null
                      ],
                      "Receiver": "RandomString958",
                      "Repeatinterval": "RandomString449"
                    },
                    "OrgID": 2916,
                    "Provenance": "RandomString896",
                    "Record": {
                      "From": "RandomString340",
                      "Metric": "RandomString748"
                    },
                    "RuleGroup": "RandomString754",
                    "Title": "RandomString131",
                    "Uid": "{Scrubbed}",
                    "Updated": "{Scrubbed}"
                  },
                  {
                    "Annotations": {
                      "RandomString237": "RandomString221",
                      "RandomString384": "RandomString674",
                      "RandomString478": "RandomString636"
                    },
                    "Condition": "RandomString500",
                    "Data": [
                      {},
                      {},
                      {}
                    ],
                    "ExecErrState": "Alerting",
                    "FolderUID": "RandomString918",
                    "For": "04:00:00",
                    "Id": 1,
                    "IsPaused": false,
                    "Labels": {
                      "RandomString286": "RandomString398",
                      "RandomString69": "RandomString548",
                      "RandomString71": "RandomString501"
                    },
                    "NoDataState": "OK",
                    "Notificationsettings": {
                      "Groupby": [
                        null,
                        null,
                        null
                      ],
                      "Groupinterval": "RandomString141",
                      "Groupwait": "RandomString909",
                      "Mutetimeintervals": [
                        null,
                        null,
                        null
                      ],
                      "Receiver": "RandomString3",
                      "Repeatinterval": "RandomString9"
                    },
                    "OrgID": 1459,
                    "Provenance": "RandomString506",
                    "Record": {
                      "From": "RandomString516",
                      "Metric": "RandomString944"
                    },
                    "RuleGroup": "RandomString716",
                    "Title": "RandomString543",
                    "Uid": "{Scrubbed}",
                    "Updated": "{Scrubbed}"
                  }
                ],
                "Title": "RandomString955"
              },
              "Type": "AlertRuleGroup",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "ValidationError  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "RoutePutContactpoint_http_put_Async",
          "ApiCallOrderId": 251,
          "RequestParameters": [
            {
              "Value": "RandomString180",
              "Type": "string",
              "Name": "uID"
            },
            {
              "Value": "RandomString885",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "DisableResolveMessage": false,
                "Name": "RandomString334",
                "Provenance": "RandomString921",
                "Settings": {},
                "Type": "victorops",
                "Uid": "{Scrubbed}"
              },
              "Type": "EmbeddedContactPoint",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"object not found: contact point with uid 'RandomString180' not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "RoutePutMuteTiming_http_put_Async",
          "ApiCallOrderId": 252,
          "RequestParameters": [
            {
              "Value": "RandomString584",
              "Type": "string",
              "Name": "name"
            },
            {
              "Value": "RandomString443",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "Name": "RandomString610",
                "Timeintervals": [
                  {
                    "Name": "RandomString941"
                  },
                  {
                    "Name": "RandomString677"
                  },
                  {
                    "Name": "RandomString254"
                  }
                ]
              },
              "Type": "MuteTimeInterval",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "ValidationError  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "RoutePutPolicyTree_http_put_Async",
          "ApiCallOrderId": 253,
          "RequestParameters": [
            {
              "Value": "RandomString62",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "Activetimeintervals": [
                  "RandomString521",
                  "RandomString405",
                  "RandomString243"
                ],
                "Continue": false,
                "Groupby": [
                  "RandomString234",
                  "RandomString212",
                  "RandomString691"
                ],
                "Groupinterval": "RandomString828",
                "Groupwait": "RandomString595",
                "Match": {
                  "RandomString594": "RandomString912",
                  "RandomString942": "RandomString56",
                  "RandomString947": "RandomString63"
                },
                "Matchre": {},
                "Matchers": [
                  {
                    "Name": "RandomString20",
                    "Type": 304,
                    "Value": "RandomString545"
                  },
                  {
                    "Name": "RandomString889",
                    "Type": 3831,
                    "Value": "RandomString203"
                  },
                  {
                    "Name": "RandomString365",
                    "Type": 5404,
                    "Value": "RandomString835"
                  }
                ],
                "Mutetimeintervals": [
                  "RandomString444",
                  "RandomString994",
                  "RandomString539"
                ],
                "Objectmatchers": [
                  [
                    "RandomString473",
                    "RandomString778",
                    "RandomString888"
                  ],
                  [
                    "RandomString840",
                    "RandomString265",
                    "RandomString351"
                  ],
                  [
                    "RandomString290",
                    "RandomString327",
                    "RandomString422"
                  ]
                ],
                "Provenance": "RandomString973",
                "Receiver": "RandomString818",
                "Repeatinterval": "RandomString832",
                "Routes": [
                  null,
                  null,
                  null
                ]
              },
              "Type": "Route",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "ValidationError  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "RoutePutTemplate_http_put_Async",
          "ApiCallOrderId": 254,
          "RequestParameters": [
            {
              "Value": "RandomString528",
              "Type": "string",
              "Name": "name"
            },
            {
              "Value": "RandomString424",
              "Type": "string",
              "Name": "x_Disable_Provenance"
            },
            {
              "Value": {
                "Template": "RandomString868",
                "Version": "RandomString666"
              },
              "Type": "NotificationTemplateContent",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"alerting.notifications.templates.notFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "RouteResetPolicyTree_http_delete_Async",
          "ApiCallOrderId": 255,
          "RequestParameters": [],
          "Response": {},
          "HttpMethod": "delete"
        },
        {
          "MethodName": "SaveReportSettings_http_post_Async",
          "ApiCallOrderId": 256,
          "RequestParameters": [
            {
              "Value": {
                "Branding": {
                  "EmailFooterLink": "RandomString658",
                  "EmailFooterMode": "RandomString708",
                  "EmailFooterText": "RandomString173",
                  "EmailLogoUrl": "RandomString858",
                  "ReportLogoUrl": "RandomString562"
                },
                "EmbeddedImageTheme": "RandomString436",
                "Id": 4929,
                "OrgId": 1832,
                "PdfTheme": "RandomString618",
                "UserId": 8955
              },
              "Type": "ReportSettings",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "Search_http_get_Async",
          "ApiCallOrderId": 257,
          "RequestParameters": [
            {
              "Value": "RandomString964",
              "Type": "string",
              "Name": "query"
            },
            {
              "Value": [
                "RandomString387",
                "RandomString178",
                "RandomString281"
              ],
              "Type": "IEnumerable<string>",
              "Name": "tag"
            },
            {
              "Type": "Nullable<Type2>",
              "Name": "type"
            },
            {
              "Value": [
                8468,
                4979,
                2233
              ],
              "Type": "IEnumerable<long>",
              "Name": "dashboardIds"
            },
            {
              "Value": [
                "RandomString977",
                "RandomString37",
                "RandomString2"
              ],
              "Type": "IEnumerable<string>",
              "Name": "dashboardUIDs"
            },
            {
              "Value": [
                3274,
                7873,
                7960
              ],
              "Type": "IEnumerable<long>",
              "Name": "folderIds"
            },
            {
              "Value": [
                "RandomString45",
                "RandomString52",
                "RandomString763"
              ],
              "Type": "IEnumerable<string>",
              "Name": "folderUIDs"
            },
            {
              "Value": false,
              "Type": "bool?",
              "Name": "starred"
            },
            {
              "Value": 6701,
              "Type": "long?",
              "Name": "limit"
            },
            {
              "Value": 8259,
              "Type": "long?",
              "Name": "page"
            },
            {
              "Type": "Nullable<Permission3>",
              "Name": "permission"
            },
            {
              "Type": "Nullable<Sort2>",
              "Name": "sort"
            },
            {
              "Value": true,
              "Type": "bool?",
              "Name": "deleted"
            }
          ],
          "Response": {
            "StatusCode": 422,
            "Message": "UnprocessableEntityError  Status: 422 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchDashboardSnapshots_http_get_Async",
          "ApiCallOrderId": 258,
          "RequestParameters": [
            {
              "Value": "RandomString858",
              "Type": "string",
              "Name": "query"
            },
            {
              "Value": 8477,
              "Type": "long?",
              "Name": "limit"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchDevices_http_post_Async",
          "ApiCallOrderId": 259,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SearchOrgs_http_get_Async",
          "ApiCallOrderId": 260,
          "RequestParameters": [
            {
              "Value": 4689,
              "Type": "long?",
              "Name": "page"
            },
            {
              "Value": 4081,
              "Type": "long?",
              "Name": "perpage"
            },
            {
              "Value": "RandomString929",
              "Type": "string",
              "Name": "name"
            },
            {
              "Value": "RandomString878",
              "Type": "string",
              "Name": "query"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchOrgServiceAccountsWithPaging_http_get_Async",
          "ApiCallOrderId": 261,
          "RequestParameters": [
            {
              "Value": true,
              "Type": "bool?",
              "Name": "disabled"
            },
            {
              "Type": "bool?",
              "Name": "expiredTokens"
            },
            {
              "Value": "RandomString367",
              "Type": "string",
              "Name": "query"
            },
            {
              "Value": 3051,
              "Type": "long?",
              "Name": "perpage"
            },
            {
              "Value": 969,
              "Type": "long?",
              "Name": "page"
            }
          ],
          "Response": {
            "Page": 969,
            "PerPage": 3051,
            "ServiceAccounts": []
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchOrgUsers_http_get_Async",
          "ApiCallOrderId": 262,
          "RequestParameters": [
            {
              "Value": 5763,
              "Type": "long",
              "Name": "org_id"
            }
          ],
          "Response": {
            "OrgUsers": [],
            "Page": 1,
            "PerPage": 1000
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchPlaylists_http_get_Async",
          "ApiCallOrderId": 263,
          "RequestParameters": [
            {
              "Value": "RandomString429",
              "Type": "string",
              "Name": "query"
            },
            {
              "Value": 2644,
              "Type": "long?",
              "Name": "limit"
            }
          ],
          "Response": [],
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchQueries_http_get_Async",
          "ApiCallOrderId": 264,
          "RequestParameters": [
            {
              "Value": [
                "RandomString607",
                "RandomString526",
                "RandomString724"
              ],
              "Type": "IEnumerable<string>",
              "Name": "datasourceUid"
            },
            {
              "Value": "RandomString642",
              "Type": "string",
              "Name": "searchString"
            },
            {
              "Type": "bool?",
              "Name": "onlyStarred"
            },
            {
              "Type": "Nullable<Sort>",
              "Name": "sort"
            },
            {
              "Value": 9990,
              "Type": "long?",
              "Name": "page"
            },
            {
              "Value": 7291,
              "Type": "long?",
              "Name": "limit"
            },
            {
              "Type": "long?",
              "Name": "from"
            },
            {
              "Value": 421,
              "Type": "long?",
              "Name": "to"
            }
          ],
          "Response": {
            "StatusCode": 200,
            "Message": "Could not deserialize the response body stream as GeneratedClientMyNamespaceRuntimeCompilationBuild1673116976.QueryHistorySearchResponse.  Status: 200 Response:",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchResult_http_post_Async",
          "ApiCallOrderId": 265,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SearchTeams_http_get_Async",
          "ApiCallOrderId": 266,
          "RequestParameters": [
            {
              "Value": 4328,
              "Type": "long?",
              "Name": "page"
            },
            {
              "Type": "long?",
              "Name": "perpage"
            },
            {
              "Value": "RandomString815",
              "Type": "string",
              "Name": "name"
            },
            {
              "Value": "RandomString904",
              "Type": "string",
              "Name": "query"
            }
          ],
          "Response": {
            "Page": 4328,
            "PerPage": 1000,
            "Teams": []
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchUsers_http_get_Async",
          "ApiCallOrderId": 267,
          "RequestParameters": [
            {
              "Value": 9747,
              "Type": "long?",
              "Name": "perpage"
            },
            {
              "Type": "long?",
              "Name": "page"
            }
          ],
          "Response": [
            {
              "AuthLabels": [],
              "AvatarUrl": "/avatar/46d229b033af06a191ff2267bca9ae56",
              "Email": "admin@localhost",
              "Id": 1,
              "IsAdmin": true,
              "IsDisabled": false,
              "LastSeenAt": "{Scrubbed}",
              "LastSeenAtAge": "< 1 minute",
              "Login": "admin",
              "Name": "",
              "Uid": "{Scrubbed}"
            }
          ],
          "HttpMethod": "get"
        },
        {
          "MethodName": "SearchUsersWithPaging_http_get_Async",
          "ApiCallOrderId": 268,
          "RequestParameters": [],
          "Response": {
            "Page": 1,
            "PerPage": 1000,
            "TotalCount": 1,
            "Users": [
              {
                "AuthLabels": [],
                "AvatarUrl": "/avatar/46d229b033af06a191ff2267bca9ae56",
                "Email": "admin@localhost",
                "Id": 1,
                "IsAdmin": true,
                "IsDisabled": false,
                "LastSeenAt": "{Scrubbed}",
                "LastSeenAtAge": "< 1 minute",
                "Login": "admin",
                "Name": "",
                "Uid": "{Scrubbed}"
              }
            ]
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "SendReport_http_post_Async",
          "ApiCallOrderId": 269,
          "RequestParameters": [
            {
              "Value": {
                "Emails": "RandomString911",
                "Id": "RandomString864",
                "UseEmailsFromReport": false
              },
              "Type": "ReportEmail",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SendTestEmail_http_post_Async",
          "ApiCallOrderId": 270,
          "RequestParameters": [
            {
              "Value": {
                "Dashboards": [
                  {
                    "Dashboard": {
                      "Id": 2232,
                      "Name": "RandomString383",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString834",
                      "To": "RandomString576"
                    }
                  },
                  {
                    "Dashboard": {
                      "Id": 7425,
                      "Name": "RandomString614",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString762",
                      "To": "RandomString770"
                    }
                  },
                  {
                    "Dashboard": {
                      "Id": 8285,
                      "Name": "RandomString55",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString860",
                      "To": "RandomString49"
                    }
                  }
                ],
                "EnableCsv": true,
                "EnableDashboardUrl": true,
                "Formats": [
                  "RandomString802",
                  "RandomString725",
                  "RandomString382"
                ],
                "Message": "RandomString505",
                "Name": "RandomString789",
                "Options": {
                  "Layout": "RandomString406",
                  "Orientation": "RandomString679",
                  "PdfCombineOneFile": true,
                  "PdfShowTemplateVariables": false,
                  "TimeRange": {
                    "From": "RandomString327",
                    "To": "RandomString855"
                  }
                },
                "Recipients": "RandomString366",
                "ReplyTo": "RandomString284",
                "ScaleFactor": 9595,
                "Schedule": {
                  "DayOfMonth": "RandomString291",
                  "EndDate": "{Scrubbed}",
                  "Frequency": "RandomString613",
                  "IntervalAmount": 1462,
                  "IntervalFrequency": "RandomString90",
                  "StartDate": "{Scrubbed}",
                  "TimeZone": "RandomString5",
                  "WorkdaysOnly": false
                },
                "State": "RandomString120"
              },
              "Type": "CreateOrUpdateReport",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SetDataSourceCacheConfig_http_post_Async",
          "ApiCallOrderId": 271,
          "RequestParameters": [
            {
              "Value": "RandomString649",
              "Type": "string",
              "Name": "dataSourceUID"
            },
            {
              "Value": {
                "DataSourceID": 5154,
                "DataSourceUID": "RandomString329",
                "Enabled": false,
                "TtlQueriesMs": 5671,
                "TtlResourcesMs": 1429,
                "UseDefaultTTL": false
              },
              "Type": "CacheConfigSetter",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SetHelpFlag_http_put_Async",
          "ApiCallOrderId": 272,
          "RequestParameters": [
            {
              "Value": "RandomString590",
              "Type": "string",
              "Name": "flag_id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"id is invalid\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "SetResourcePermissions_http_post_Async",
          "ApiCallOrderId": 273,
          "RequestParameters": [
            {
              "Value": "RandomString18",
              "Type": "string",
              "Name": "resource"
            },
            {
              "Value": "RandomString237",
              "Type": "string",
              "Name": "resourceID"
            },
            {
              "Value": {
                "Permissions": [
                  {
                    "BuiltInRole": "RandomString323",
                    "Permission": "RandomString63",
                    "TeamId": 9099,
                    "UserId": 6297
                  },
                  {
                    "BuiltInRole": "RandomString383",
                    "Permission": "RandomString100",
                    "TeamId": 8727,
                    "UserId": 9652
                  },
                  {
                    "BuiltInRole": "RandomString868",
                    "Permission": "RandomString710",
                    "TeamId": 6518,
                    "UserId": 5140
                  }
                ]
              },
              "Type": "SetPermissionsCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SetResourcePermissionsForBuiltInRole_http_post_Async",
          "ApiCallOrderId": 274,
          "RequestParameters": [
            {
              "Value": "RandomString83",
              "Type": "string",
              "Name": "resource"
            },
            {
              "Value": "RandomString145",
              "Type": "string",
              "Name": "resourceID"
            },
            {
              "Value": "RandomString791",
              "Type": "string",
              "Name": "builtInRole"
            },
            {
              "Value": {
                "Permission": "RandomString75"
              },
              "Type": "SetPermissionCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SetResourcePermissionsForTeam_http_post_Async",
          "ApiCallOrderId": 275,
          "RequestParameters": [
            {
              "Value": "RandomString817",
              "Type": "string",
              "Name": "resource"
            },
            {
              "Value": "RandomString700",
              "Type": "string",
              "Name": "resourceID"
            },
            {
              "Value": 5377,
              "Type": "long",
              "Name": "teamID"
            },
            {
              "Value": {
                "Permission": "RandomString844"
              },
              "Type": "SetPermissionCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SetResourcePermissionsForUser_http_post_Async",
          "ApiCallOrderId": 276,
          "RequestParameters": [
            {
              "Value": "RandomString307",
              "Type": "string",
              "Name": "resource"
            },
            {
              "Value": "RandomString844",
              "Type": "string",
              "Name": "resourceID"
            },
            {
              "Value": 4087,
              "Type": "long",
              "Name": "userID"
            },
            {
              "Value": {
                "Permission": "RandomString375"
              },
              "Type": "SetPermissionCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "SetRoleAssignments_http_put_Async",
          "ApiCallOrderId": 277,
          "RequestParameters": [
            {
              "Value": "RandomString453",
              "Type": "string",
              "Name": "roleUID"
            },
            {
              "Value": {
                "Serviceaccounts": [
                  5946,
                  168,
                  9054
                ],
                "Teams": [
                  9317,
                  8279,
                  7050
                ],
                "Users": [
                  9890,
                  80,
                  1152
                ]
              },
              "Type": "SetRoleAssignmentsCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "SetTeamMemberships_http_put_Async",
          "ApiCallOrderId": 278,
          "RequestParameters": [
            {
              "Value": "RandomString895",
              "Type": "string",
              "Name": "team_id"
            },
            {
              "Value": {
                "Admins": [
                  "RandomString481",
                  "RandomString414",
                  "RandomString457"
                ],
                "Members": [
                  "RandomString303",
                  "RandomString6",
                  "RandomString296"
                ]
              },
              "Type": "SetTeamMembershipsCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "SetTeamRoles_http_put_Async",
          "ApiCallOrderId": 279,
          "RequestParameters": [
            {
              "Value": 8065,
              "Type": "long",
              "Name": "teamId"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "SetUserRoles_http_put_Async",
          "ApiCallOrderId": 280,
          "RequestParameters": [
            {
              "Value": 130,
              "Type": "long",
              "Name": "userId"
            },
            {
              "Value": {
                "Global": true,
                "IncludeHidden": false,
                "RoleUids": [
                  "RandomString6",
                  "RandomString766",
                  "RandomString792"
                ]
              },
              "Type": "SetUserRolesCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "StarDashboard_http_post_Async",
          "ApiCallOrderId": 281,
          "RequestParameters": [
            {
              "Value": "RandomString572",
              "Type": "string",
              "Name": "dashboard_id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "StarDashboardByUID_http_post_Async",
          "ApiCallOrderId": 282,
          "RequestParameters": [
            {
              "Value": "RandomString922",
              "Type": "string",
              "Name": "dashboard_uid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Dashboard not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "StarQuery_http_post_Async",
          "ApiCallOrderId": 283,
          "RequestParameters": [
            {
              "Value": "RandomString791",
              "Type": "string",
              "Name": "query_history_uid"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "TestCreateRecordingRule_http_post_Async",
          "ApiCallOrderId": 284,
          "RequestParameters": [
            {
              "Value": {
                "Active": true,
                "Count": false,
                "Description": "RandomString202",
                "Destdatasourceuid": "RandomString91",
                "Id": "RandomString106",
                "Interval": 380,
                "Name": "RandomString622",
                "Promname": "RandomString174",
                "Queries": [
                  {
                    "RandomString380": {},
                    "RandomString655": {},
                    "RandomString933": {}
                  },
                  {
                    "RandomString110": {},
                    "RandomString15": {},
                    "RandomString529": {}
                  },
                  {
                    "RandomString438": {},
                    "RandomString457": {},
                    "RandomString520": {}
                  }
                ],
                "Range": 808,
                "Targetrefid": "RandomString291"
              },
              "Type": "RecordingRuleJSON",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "UnstarDashboard_http_delete_Async",
          "ApiCallOrderId": 285,
          "RequestParameters": [
            {
              "Value": "RandomString344",
              "Type": "string",
              "Name": "dashboard_id"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "UnstarDashboardByUID_http_delete_Async",
          "ApiCallOrderId": 286,
          "RequestParameters": [
            {
              "Value": "RandomString435",
              "Type": "string",
              "Name": "dashboard_uid"
            }
          ],
          "Response": {
            "Message": "Dashboard unstarred"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "UnstarQuery_http_delete_Async",
          "ApiCallOrderId": 287,
          "RequestParameters": [
            {
              "Value": "RandomString74",
              "Type": "string",
              "Name": "query_history_uid"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "delete"
        },
        {
          "MethodName": "UpdateAnnotation_http_put_Async",
          "ApiCallOrderId": 288,
          "RequestParameters": [
            {
              "Value": "RandomString916",
              "Type": "string",
              "Name": "annotation_id"
            },
            {
              "Value": {
                "Data": {},
                "Id": 4551,
                "Tags": [
                  "RandomString423",
                  "RandomString766",
                  "RandomString505"
                ],
                "Text": "RandomString132",
                "Time": 5460,
                "TimeEnd": 1592
              },
              "Type": "UpdateAnnotationsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateCorrelation_http_patch_Async",
          "ApiCallOrderId": 289,
          "RequestParameters": [
            {
              "Value": "RandomString834",
              "Type": "string",
              "Name": "sourceUID"
            },
            {
              "Value": "RandomString831",
              "Type": "string",
              "Name": "correlationUID"
            },
            {
              "Value": {
                "Config": {
                  "Field": "RandomString23",
                  "Target": {
                    "RandomString264": {},
                    "RandomString625": {},
                    "RandomString657": {}
                  },
                  "Transformations": [
                    {
                      "Expression": "RandomString557",
                      "Field": "RandomString402",
                      "MapValue": "RandomString354"
                    },
                    {
                      "Expression": "RandomString268",
                      "Field": "RandomString270",
                      "MapValue": "RandomString396",
                      "Type": "logfmt"
                    },
                    {
                      "Expression": "RandomString18",
                      "Field": "RandomString634",
                      "MapValue": "RandomString335",
                      "Type": "logfmt"
                    }
                  ]
                },
                "Description": "RandomString768",
                "Label": "RandomString949",
                "Type": "RandomString705"
              },
              "Type": "UpdateCorrelationCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "UpdateCurrentOrg_http_put_Async",
          "ApiCallOrderId": 290,
          "RequestParameters": [
            {
              "Value": {
                "Name": "RandomString536"
              },
              "Type": "UpdateOrgForm",
              "Name": "body"
            }
          ],
          "Response": {
            "Message": "Organization updated"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateCurrentOrgAddress_http_put_Async",
          "ApiCallOrderId": 291,
          "RequestParameters": [
            {
              "Value": {
                "Address1": "RandomString269",
                "Address2": "RandomString655",
                "City": "RandomString956",
                "Country": "RandomString343",
                "State": "RandomString24",
                "Zipcode": "RandomString883"
              },
              "Type": "UpdateOrgAddressForm",
              "Name": "body"
            }
          ],
          "Response": {
            "Message": "Address updated"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateDashboardPermissionsByID_http_post_Async",
          "ApiCallOrderId": 292,
          "RequestParameters": [
            {
              "Value": 2024,
              "Type": "long",
              "Name": "dashboardID"
            },
            {
              "Value": {
                "Items": [
                  {
                    "Permission": 9797,
                    "Role": "Editor",
                    "TeamId": 8465,
                    "UserId": 5644
                  },
                  {
                    "Permission": 6076,
                    "Role": "Admin",
                    "TeamId": 9450,
                    "UserId": 9216
                  },
                  {
                    "Permission": 5159,
                    "TeamId": 105,
                    "UserId": 526
                  }
                ]
              },
              "Type": "UpdateDashboardACLCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "UpdateDashboardPermissionsByUID_http_post_Async",
          "ApiCallOrderId": 293,
          "RequestParameters": [
            {
              "Value": "RandomString608",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {
                "Items": [
                  {
                    "Permission": 9784,
                    "Role": "Viewer",
                    "TeamId": 9587,
                    "UserId": 9724
                  },
                  {
                    "Permission": 5202,
                    "Role": "Viewer",
                    "TeamId": 6091,
                    "UserId": 5722
                  },
                  {
                    "Permission": 1399,
                    "TeamId": 3307,
                    "UserId": 1046
                  }
                ]
              },
              "Type": "UpdateDashboardACLCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "UpdateDataSourceByID_http_put_Async",
          "ApiCallOrderId": 294,
          "RequestParameters": [
            {
              "Value": "RandomString904",
              "Type": "string",
              "Name": "id"
            },
            {
              "Value": {
                "Access": "RandomString581",
                "BasicAuth": true,
                "BasicAuthUser": "RandomString192",
                "Database": "RandomString560",
                "IsDefault": true,
                "JsonData": {},
                "Name": "RandomString592",
                "SecureJsonData": {
                  "RandomString724": "RandomString609",
                  "RandomString878": "RandomString665",
                  "RandomString948": "RandomString673"
                },
                "Type": "RandomString590",
                "Uid": "{Scrubbed}",
                "Url": "{Scrubbed}",
                "User": "RandomString498",
                "Version": 6534,
                "WithCredentials": true
              },
              "Type": "UpdateDataSourceCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"id is invalid\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateDataSourceByUID_http_put_Async",
          "ApiCallOrderId": 295,
          "RequestParameters": [
            {
              "Value": "RandomString688",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {
                "Access": "RandomString542",
                "BasicAuth": false,
                "BasicAuthUser": "RandomString579",
                "Database": "RandomString670",
                "IsDefault": false,
                "JsonData": {},
                "Name": "RandomString5",
                "SecureJsonData": {
                  "RandomString272": "RandomString784",
                  "RandomString29": "RandomString867",
                  "RandomString937": "RandomString131"
                },
                "Type": "RandomString938",
                "Uid": "{Scrubbed}",
                "Url": "{Scrubbed}",
                "User": "RandomString235",
                "Version": 1547,
                "WithCredentials": true
              },
              "Type": "UpdateDataSourceCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Data source not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateFolder_http_put_Async",
          "ApiCallOrderId": 296,
          "RequestParameters": [
            {
              "Value": "RandomString269",
              "Type": "string",
              "Name": "folder_uid"
            },
            {
              "Value": {
                "Description": "RandomString258",
                "Overwrite": false,
                "Title": "RandomString361",
                "Version": 5727
              },
              "Type": "UpdateFolderCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateFolderPermissions_http_post_Async",
          "ApiCallOrderId": 297,
          "RequestParameters": [
            {
              "Value": "RandomString588",
              "Type": "string",
              "Name": "folder_uid"
            },
            {
              "Value": {
                "Items": [
                  {
                    "Permission": 183,
                    "Role": "Editor",
                    "TeamId": 4315,
                    "UserId": 6844
                  },
                  {
                    "Permission": 7336,
                    "TeamId": 2139,
                    "UserId": 1381
                  },
                  {
                    "Permission": 6627,
                    "Role": "Admin",
                    "TeamId": 6877,
                    "UserId": 4728
                  }
                ]
              },
              "Type": "UpdateDashboardACLCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"bad request data\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "UpdateGroupMappings_http_put_Async",
          "ApiCallOrderId": 298,
          "RequestParameters": [
            {
              "Value": "RandomString962",
              "Type": "string",
              "Name": "group_id"
            },
            {
              "Value": {
                "Roles": [
                  "RandomString876",
                  "RandomString436",
                  "RandomString93"
                ]
              },
              "Type": "GroupAttributes",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateLibraryElement_http_patch_Async",
          "ApiCallOrderId": 299,
          "RequestParameters": [
            {
              "Value": "RandomString527",
              "Type": "string",
              "Name": "library_element_uid"
            },
            {
              "Value": {
                "FolderId": 9684,
                "FolderUid": "RandomString811",
                "Kind": "_1",
                "Model": {},
                "Name": "RandomString479",
                "Uid": "{Scrubbed}",
                "Version": 2947
              },
              "Type": "PatchLibraryElementCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "UpdateOrg_http_put_Async",
          "ApiCallOrderId": 300,
          "RequestParameters": [
            {
              "Value": 5616,
              "Type": "long",
              "Name": "org_id"
            },
            {
              "Value": {
                "Name": "RandomString153"
              },
              "Type": "UpdateOrgForm",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateOrgAddress_http_put_Async",
          "ApiCallOrderId": 301,
          "RequestParameters": [
            {
              "Value": 5801,
              "Type": "long",
              "Name": "org_id"
            },
            {
              "Value": {
                "Address1": "RandomString25",
                "Address2": "RandomString655",
                "City": "RandomString567",
                "Country": "RandomString365",
                "State": "RandomString226",
                "Zipcode": "RandomString890"
              },
              "Type": "UpdateOrgAddressForm",
              "Name": "body"
            }
          ],
          "Response": {
            "Message": "Address updated"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateOrgPreferences_http_put_Async",
          "ApiCallOrderId": 302,
          "RequestParameters": [
            {
              "Value": {
                "Cookies": [
                  "RandomString951",
                  "RandomString227",
                  "RandomString355"
                ],
                "HomeDashboardId": 9346,
                "HomeDashboardUID": "RandomString687",
                "Language": "RandomString558",
                "Navbar": {
                  "BookmarkUrls": [
                    "RandomString764",
                    "RandomString721",
                    "RandomString139"
                  ]
                },
                "QueryHistory": {
                  "HomeTab": "RandomString146"
                },
                "Timezone": "browser",
                "WeekStart": "RandomString686"
              },
              "Type": "UpdatePrefsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateOrgQuota_http_put_Async",
          "ApiCallOrderId": 303,
          "RequestParameters": [
            {
              "Value": "RandomString449",
              "Type": "string",
              "Name": "quota_target"
            },
            {
              "Value": 1286,
              "Type": "long",
              "Name": "org_id"
            },
            {
              "Value": {
                "Limit": 7113,
                "Target": "RandomString227"
              },
              "Type": "UpdateQuotaCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateOrgUser_http_patch_Async",
          "ApiCallOrderId": 304,
          "RequestParameters": [
            {
              "Value": 8638,
              "Type": "long",
              "Name": "org_id"
            },
            {
              "Value": 265,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "Role": "Viewer"
              },
              "Type": "UpdateOrgUserCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "UpdateOrgUserForCurrentOrg_http_patch_Async",
          "ApiCallOrderId": 305,
          "RequestParameters": [
            {
              "Value": 3400,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "Role": "Admin"
              },
              "Type": "UpdateOrgUserCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "UpdatePlaylist_http_put_Async",
          "ApiCallOrderId": 306,
          "RequestParameters": [
            {
              "Value": "RandomString209",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {
                "Interval": "RandomString204",
                "Items": [
                  {
                    "Id": 2703,
                    "PlaylistId": 4558,
                    "Order": 1952,
                    "Title": "RandomString236",
                    "Type": "RandomString116",
                    "Value": "RandomString253"
                  },
                  {
                    "Id": 8714,
                    "PlaylistId": 904,
                    "Order": 6531,
                    "Title": "RandomString694",
                    "Type": "RandomString859",
                    "Value": "RandomString361"
                  },
                  {
                    "Id": 504,
                    "PlaylistId": 6745,
                    "Order": 9640,
                    "Title": "RandomString880",
                    "Type": "RandomString210",
                    "Value": "RandomString127"
                  }
                ],
                "Name": "RandomString153",
                "Uid": "{Scrubbed}"
              },
              "Type": "UpdatePlaylistCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "The HTTP status code of the response was not expected (400).  Status: 400 Response:  {\"message\":\"bad request data\",}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateProviderSettings_http_put_Async",
          "ApiCallOrderId": 307,
          "RequestParameters": [
            {
              "Value": "RandomString921",
              "Type": "string",
              "Name": "key"
            },
            {
              "Value": {
                "Id": "RandomString292",
                "Provider": "RandomString446",
                "Settings": {
                  "RandomString409": {},
                  "RandomString766": {},
                  "RandomString973": {}
                }
              },
              "Type": "Body2",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 403,
            "Message": "ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.  Status: 403 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdatePublicDashboard_http_patch_Async",
          "ApiCallOrderId": 308,
          "RequestParameters": [
            {
              "Value": "RandomString715",
              "Type": "string",
              "Name": "dashboardUid"
            },
            {
              "Value": "RandomString917",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {
                "AccessToken": "RandomString43",
                "AnnotationsEnabled": false,
                "IsEnabled": true,
                "Share": "RandomString789",
                "TimeSelectionEnabled": true,
                "Uid": "{Scrubbed}"
              },
              "Type": "PublicDashboardDTO",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestPublicError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "UpdateRecordingRule_http_put_Async",
          "ApiCallOrderId": 309,
          "RequestParameters": [
            {
              "Value": {
                "Active": false,
                "Count": false,
                "Description": "RandomString615",
                "Destdatasourceuid": "RandomString45",
                "Id": "RandomString878",
                "Interval": 7124,
                "Name": "RandomString904",
                "Promname": "RandomString295",
                "Queries": [
                  {
                    "RandomString127": {},
                    "RandomString450": {},
                    "RandomString844": {}
                  },
                  {
                    "RandomString357": {},
                    "RandomString414": {},
                    "RandomString508": {}
                  },
                  {
                    "RandomString212": {},
                    "RandomString558": {},
                    "RandomString98": {}
                  }
                ],
                "Range": 6198,
                "Targetrefid": "RandomString385"
              },
              "Type": "RecordingRuleJSON",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateReport_http_put_Async",
          "ApiCallOrderId": 310,
          "RequestParameters": [
            {
              "Value": 8414,
              "Type": "long",
              "Name": "id"
            },
            {
              "Value": {
                "Dashboards": [
                  {
                    "Dashboard": {
                      "Id": 2691,
                      "Name": "RandomString248",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString314",
                      "To": "RandomString969"
                    }
                  },
                  {
                    "Dashboard": {
                      "Id": 599,
                      "Name": "RandomString145",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString207",
                      "To": "RandomString185"
                    }
                  },
                  {
                    "Dashboard": {
                      "Id": 1747,
                      "Name": "RandomString631",
                      "Uid": "{Scrubbed}"
                    },
                    "ReportVariables": {},
                    "TimeRange": {
                      "From": "RandomString915",
                      "To": "RandomString977"
                    }
                  }
                ],
                "EnableCsv": false,
                "EnableDashboardUrl": false,
                "Formats": [
                  "RandomString715",
                  "RandomString351",
                  "RandomString715"
                ],
                "Message": "RandomString704",
                "Name": "RandomString166",
                "Options": {
                  "Layout": "RandomString809",
                  "Orientation": "RandomString911",
                  "PdfCombineOneFile": true,
                  "PdfShowTemplateVariables": false,
                  "TimeRange": {
                    "From": "RandomString270",
                    "To": "RandomString813"
                  }
                },
                "Recipients": "RandomString874",
                "ReplyTo": "RandomString130",
                "ScaleFactor": 6783,
                "Schedule": {
                  "DayOfMonth": "RandomString427",
                  "EndDate": "{Scrubbed}",
                  "Frequency": "RandomString194",
                  "IntervalAmount": 9982,
                  "IntervalFrequency": "RandomString296",
                  "StartDate": "{Scrubbed}",
                  "TimeZone": "RandomString159",
                  "WorkdaysOnly": false
                },
                "State": "RandomString467"
              },
              "Type": "CreateOrUpdateReport",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateRole_http_put_Async",
          "ApiCallOrderId": 311,
          "RequestParameters": [
            {
              "Value": "RandomString109",
              "Type": "string",
              "Name": "roleUID"
            },
            {
              "Value": {
                "Description": "RandomString336",
                "DisplayName": "RandomString311",
                "Global": false,
                "Group": "RandomString637",
                "Hidden": true,
                "Name": "RandomString65",
                "Permissions": [
                  {
                    "Action": "RandomString313",
                    "Created": "{Scrubbed}",
                    "Scope": "RandomString335",
                    "Updated": "{Scrubbed}"
                  },
                  {
                    "Action": "RandomString936",
                    "Created": "{Scrubbed}",
                    "Scope": "RandomString225",
                    "Updated": "{Scrubbed}"
                  },
                  {
                    "Action": "RandomString768",
                    "Created": "{Scrubbed}",
                    "Scope": "RandomString265",
                    "Updated": "{Scrubbed}"
                  }
                ],
                "Version": 9530
              },
              "Type": "UpdateRoleCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateServiceAccount_http_patch_Async",
          "ApiCallOrderId": 312,
          "RequestParameters": [
            {
              "Value": 7484,
              "Type": "long",
              "Name": "serviceAccountId"
            },
            {
              "Value": {
                "IsDisabled": true,
                "Name": "RandomString869",
                "ServiceAccountId": 3102
              },
              "Type": "UpdateServiceAccountForm",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "patch"
        },
        {
          "MethodName": "UpdateTeam_http_put_Async",
          "ApiCallOrderId": 314,
          "RequestParameters": [
            {
              "Value": "RandomString367",
              "Type": "string",
              "Name": "team_id"
            },
            {
              "Value": {
                "Email": "RandomString514",
                "ID": 4987,
                "Name": "RandomString80"
              },
              "Type": "UpdateTeamCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateTeamLBACRulesApi_http_put_Async",
          "ApiCallOrderId": 315,
          "RequestParameters": [
            {
              "Value": "RandomString472",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": {
                "Rules": [
                  {
                    "Rules": [
                      "RandomString155",
                      "RandomString665",
                      "RandomString666"
                    ],
                    "TeamId": "RandomString59",
                    "TeamUid": "RandomString841"
                  },
                  {
                    "Rules": [
                      "RandomString209",
                      "RandomString430",
                      "RandomString887"
                    ],
                    "TeamId": "RandomString536",
                    "TeamUid": "RandomString765"
                  },
                  {
                    "Rules": [
                      "RandomString369",
                      "RandomString772",
                      "RandomString80"
                    ],
                    "TeamId": "RandomString66",
                    "TeamUid": "RandomString116"
                  }
                ]
              },
              "Type": "UpdateTeamLBACCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateTeamMember_http_put_Async",
          "ApiCallOrderId": 316,
          "RequestParameters": [
            {
              "Value": "RandomString861",
              "Type": "string",
              "Name": "team_id"
            },
            {
              "Value": 32,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "Permission": 3264
              },
              "Type": "UpdateTeamMemberCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "NotFoundError is returned when the requested resource was not found.  Status: 404 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateTeamPreferences_http_put_Async",
          "ApiCallOrderId": 317,
          "RequestParameters": [
            {
              "Value": "RandomString339",
              "Type": "string",
              "Name": "team_id"
            },
            {
              "Value": {
                "Cookies": [
                  "RandomString64",
                  "RandomString723",
                  "RandomString204"
                ],
                "HomeDashboardId": 7142,
                "HomeDashboardUID": "RandomString484",
                "Language": "RandomString759",
                "Navbar": {
                  "BookmarkUrls": [
                    "RandomString427",
                    "RandomString856",
                    "RandomString793"
                  ]
                },
                "QueryHistory": {
                  "HomeTab": "RandomString399"
                },
                "Timezone": "browser",
                "WeekStart": "RandomString685"
              },
              "Type": "UpdatePrefsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateUser_http_put_Async",
          "ApiCallOrderId": 318,
          "RequestParameters": [
            {
              "Value": 6946,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "Email": "RandomString792",
                "Login": "RandomString705",
                "Name": "RandomString484",
                "Theme": "RandomString417"
              },
              "Type": "UpdateUserCommand",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateUserEmail_http_get_Async",
          "ApiCallOrderId": 319,
          "RequestParameters": [],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"message\":\"Not found\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "get"
        },
        {
          "MethodName": "UpdateUserPreferences_http_put_Async",
          "ApiCallOrderId": 320,
          "RequestParameters": [
            {
              "Value": {
                "Cookies": [
                  "RandomString251",
                  "RandomString652",
                  "RandomString962"
                ],
                "HomeDashboardId": 5347,
                "HomeDashboardUID": "RandomString603",
                "Language": "RandomString335",
                "Navbar": {
                  "BookmarkUrls": [
                    "RandomString637",
                    "RandomString603",
                    "RandomString531"
                  ]
                },
                "QueryHistory": {
                  "HomeTab": "RandomString131"
                },
                "Timezone": "browser",
                "WeekStart": "RandomString932"
              },
              "Type": "UpdatePrefsCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UpdateUserQuota_http_put_Async",
          "ApiCallOrderId": 321,
          "RequestParameters": [
            {
              "Value": "RandomString288",
              "Type": "string",
              "Name": "quota_target"
            },
            {
              "Value": 4255,
              "Type": "long",
              "Name": "user_id"
            },
            {
              "Value": {
                "Limit": 5515,
                "Target": "RandomString998"
              },
              "Type": "UpdateQuotaCmd",
              "Name": "body"
            }
          ],
          "Response": {
            "StatusCode": 500,
            "Message": "InternalServerError is a general error indicating something went wrong internally.  Status: 500 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "put"
        },
        {
          "MethodName": "UploadSnapshot_http_post_Async",
          "ApiCallOrderId": 322,
          "RequestParameters": [
            {
              "Value": "RandomString915",
              "Type": "string",
              "Name": "uid"
            },
            {
              "Value": "RandomString271",
              "Type": "string",
              "Name": "snapshotUid"
            }
          ],
          "Response": {
            "StatusCode": 404,
            "Message": "The HTTP status code of the response was not expected (404).  Status: 404 Response:  {\"statusCode\":404,\"messageId\":\"cloudmigrations.sessionNotFound\",\"message\":\"NotFound\"}",
            "TypeName": "ApiException"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "UserSetUsingOrg_http_post_Async",
          "ApiCallOrderId": 323,
          "RequestParameters": [
            {
              "Value": 3098,
              "Type": "long",
              "Name": "org_id"
            }
          ],
          "Response": {
            "StatusCode": 401,
            "Message": "UnauthorizedError is returned when the request is not authenticated.  Status: 401 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "post"
        },
        {
          "MethodName": "ViewPublicDashboard_http_get_Async",
          "ApiCallOrderId": 324,
          "RequestParameters": [
            {
              "Value": "RandomString647",
              "Type": "string",
              "Name": "accessToken"
            }
          ],
          "Response": {
            "StatusCode": 400,
            "Message": "BadRequestPublicError is returned when the request is invalid and it cannot be processed.  Status: 400 Response:",
            "TypeName": "ApiException`1"
          },
          "HttpMethod": "get"
        }
      ]
    }
  ]
}